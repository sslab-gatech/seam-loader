#ifndef MAKEFLAG_H
#define MAKEFLAG_H
#define MKF_ENTRY_DEAD_LOOP         0
//
// Platform type
//
#define MCP_PLATFORM_TYPE           SERVER
//
// Header version
//
#define MF_HEADER_VERSION           ACM_HEADER_V_3
//
// Module flags control production/debug and PW/NPW module
//
#define MCP_MODULE_FLAGS            MF_PROD_WORTHY
//
// Module version
//
#define MCP_ACM_VER                 0x00
#define MCP_ACM_REVISION            {0x0,0x4,0x5}
#define MCP_PLAT_PHASE              0x0
//


//
// Min. SINIT to support on platform
// Biosac will write this value to aux index, and SINIT revocation logic will revoke itself 
// if it doesn't meet this value.
//
#define MCP_ACM_VER                 0x00
//
// Module type
//
#define MCP_MODULE_TYPE             CS_MODULE_TYPE
//
// Module sub-type
//
#define MCP_MODULE_SUBTYPE          CLIENT_MODULE_SUBTYPE   // 0

#define MCP_REVISION_ID 1
#define MCP_REVISION_ID_MASK BIT0


//-----------------------------------------------------------------------------
// Header parameters - established once in the beginning of project
//-----------------------------------------------------------------------------
// Module ID
//
#define MCP_MODULE_ID                   0       // no chipset
//
// Module type - SINIT or BIOS AC.
//
#define MCP_CHIPSET_ACM_TYPE        AC_BIOSAC
//
// AC Info table version
//
#define ACM_INFO_TAB_VER            0x7
//
// OS SINIT table version
//
#define OS_SINIT_TAB_VER            0
//
// Module capabilities.
//
#define MCP_ACM_CAPABILITIES        0   // no SINIT capabilities

//
// Security Version Number
//
#define MCP_ACM_SVN                 0
#define MCP_SE_SVN                  4    // Update to >=1 for PV and post PV releases

//
// LTSX / Client TXT Flag
//
#define LTSX_SERVER_TXT             LTSX_FUSED
//
// Module chipset ID structure fields
//
#define LCP_ELT_SELECTION           0
//
// TXT Error register
//
#define TXT_ERROR_REGISTER          LT_PRV_BASE + offsetof (TXT, LT_BIOSACMCode)
//
// S_CRTM root
//
#define S_CRTM_ROOT                 CPU_ROOTED_S_CRTM
//
// Good values forced into certain registers
//
#define MCHBAR_ADDR                 0xFED10000

//
// Module chipset ID structure fields
//
#define   MF_CS_PRESENT_1           1
#define   MF_REVID_MASK_1           MCP_REVISION_ID_MASK
#define   MF_DEVICE_ID_1            MCP_MODULE_ID       //S3M LT_DID
#define   MF_REVISION_ID_1          MCP_REVISION_ID

#define   MF_CS_PRESENT_2           0
#define   MF_REVID_MASK_2           0
#define   MF_DEVICE_ID_2            0
#define   MF_REVISION_ID_2          0

#define   MF_CS_PRESENT_3           0
#define   MF_REVID_MASK_3           0
#define   MF_DEVICE_ID_3            0
#define   MF_REVISION_ID_3          0

#define   MF_CS_PRESENT_4           0
#define   MF_REVID_MASK_4           0
#define   MF_DEVICE_ID_4            0
#define   MF_REVISION_ID_4          0




//
// Processor Family/Model/Stepping and Platform ID Equates
//
#define   GNR_FMS                   0xA06D0
#define   FMS_MASK                  0xFFF3FF0

// TODO: review PLATFORM_ID
#define   PLATFORM_ID               0               // IA32_PLATFORM_ID definition changed in BWG,
#define   PLATFORM_ID_MASK          0x001C000000000000

#define     MF_PROC_PRESENT_1       1
#define     MF_FMS_1                GNR_FMS
#define     MF_FMS_MASK_1           FMS_MASK
#define     PLATFORM_ID_1           0x0000000000000000
#define     PLATFORM_ID_MASK_1      0x0000000000000000

#define     MF_PROC_PRESENT_2       0
#define     MF_FMS_2                0
#define     MF_FMS_MASK_2           0
#define     PLATFORM_ID_2           0
#define     PLATFORM_ID_MASK_2      0

#define     MF_PROC_PRESENT_3       0
#define     MF_FMS_3                0
#define     MF_FMS_MASK_3           0
#define     PLATFORM_ID_3           0
#define     PLATFORM_ID_MASK_3      0

#define     MF_PROC_PRESENT_4       0
#define     MF_FMS_4                0
#define     MF_FMS_MASK_4           0
#define     PLATFORM_ID_4           0
#define     PLATFORM_ID_MASK_4      0

//
// TPM family and interface support
//
#define MKF_CAP_TPM_FAM_20          1
#define MKF_CAP_TPM_ITF_CRB         1
#define MKF_CAP_TPM_ITF_FIFO        1

#define MKF_PFR_SUPPORTED           1
#define SIMICS_BLD                  0
#define TXT_STATUS                  


//
// TPM_CAPABILITIES
//                 
#define    MCP_ACM_TPM_CAPABILITIES 0

//                                  
// Minimal required hash strength for naleAlg

#define     MIN_DIGEST_SIZE         32

//
// Project specific sizes
//
#define LT_DPR_MEM_SIZE             0x300000
#define HEAP_MEM_SIZE               0xE0000
//
// TPM crypto support
//
#define MF_ALG_SHA1_PRESENT         0
#define MF_ALG_SHA256_PRESENT       0
#define MF_ALG_SHA384_PRESENT       0
#define MF_ALG_SHA512_PRESENT       0
#define MF_ALG_SM3_256_PRESENT      0
#define MF_ALG_RSASSA_PRESENT       0
#define MF_ALG_RSAPSS_PRESENT       0
#define MF_ALG_ECDSA_PRESENT        0
#define MF_ALG_SM2_PRESENT          0
#define MKF_USE_INTERNAL_HASH       0

#define MKF_LTSX_MODE               

#define MKF_USB_TRACE               0

#define SIMICS_BLD                  0


//-----------------------------------------------------------------------------
// Stack size
//-----------------------------------------------------------------------------
#define STACK_SIZE                  (0x10000 + 0)
#endif
