; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	CpuidEx
;	COMDAT pdata
pdata	SEGMENT
$pdata$CpuidEx DD imagerel $LN8
	DD	imagerel $LN8+64
	DD	imagerel $unwind$CpuidEx
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CpuidEx DD 020601H
	DD	030021206H
xdata	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\cpuidex64.c
;	COMDAT CpuidEx
_TEXT	SEGMENT
Index$ = 32
SubIndex$ = 40
Eax$ = 48
Ebx$ = 56
Ecx$ = 64
Edx$ = 72
CpuidEx	PROC						; COMDAT

; 57   : 		   {

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 10	 sub	 rsp, 16
  00006	44 8b d1	 mov	 r10d, ecx

; 58   :     
; 59   :     UINT32 CpuInfo[4] = {0};
; 60   : 	
; 61   :     (void)__cpuidex(CpuInfo, Index, SubIndex);

  00009	8b c1		 mov	 eax, ecx
  0000b	8b ca		 mov	 ecx, edx
  0000d	0f a2		 cpuid

; 62   : 
; 63   :     if (Eax != NULL) {

  0000f	4d 85 c0	 test	 r8, r8
  00012	74 03		 je	 SHORT $LN2@CpuidEx

; 64   :         *Eax = CpuInfo[0];

  00014	41 89 00	 mov	 DWORD PTR [r8], eax
$LN2@CpuidEx:

; 65   :     }
; 66   :     if (Ebx != NULL) {

  00017	4d 85 c9	 test	 r9, r9
  0001a	74 03		 je	 SHORT $LN3@CpuidEx

; 67   :         *Ebx = CpuInfo[1];

  0001c	41 89 19	 mov	 DWORD PTR [r9], ebx
$LN3@CpuidEx:

; 68   :     }
; 69   :     if (Ecx != NULL) {

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR Ecx$[rsp]
  00024	48 85 c0	 test	 rax, rax
  00027	74 02		 je	 SHORT $LN4@CpuidEx

; 70   :         *Ecx = CpuInfo[2];

  00029	89 08		 mov	 DWORD PTR [rax], ecx
$LN4@CpuidEx:

; 71   :     }
; 72   :     if (Edx != NULL) {

  0002b	48 8b 44 24 48	 mov	 rax, QWORD PTR Edx$[rsp]
  00030	48 85 c0	 test	 rax, rax
  00033	74 02		 je	 SHORT $LN5@CpuidEx

; 73   :         *Edx = CpuInfo[3];

  00035	89 10		 mov	 DWORD PTR [rax], edx
$LN5@CpuidEx:

; 74   :     }
; 75   : 	
; 76   : 	return Index;

  00037	41 8b c2	 mov	 eax, r10d

; 77   : }

  0003a	48 83 c4 10	 add	 rsp, 16
  0003e	5b		 pop	 rbx
  0003f	c3		 ret	 0
CpuidEx	ENDP
_TEXT	ENDS
END
