; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

	TITLE	D:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\Core\Trace\Serial\Com.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EDATA32	SEGMENT
_ComAddr DD	03f8H
_LineStat DD	03fdH
_Once	DB	00H
EDATA32	ENDS
PUBLIC	_ComSerialOut
EXTRN	_InitSio:PROC
EXTRN	_Wait1ms:PROC
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\trace\serial\com.c
;	COMDAT _InitializeComPort
_TEXT	SEGMENT
_InitializeComPort PROC					; COMDAT

; 26   :   if (InitSio()) {

  00000	e8 00 00 00 00	 call	 _InitSio
  00005	85 c0		 test	 eax, eax
  00007	74 33		 je	 SHORT $LN2@Initialize

; 27   :     __outbyte(ComAddr + 3, 0x87); // DLAB bit

  00009	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ComAddr
  0000f	b0 87		 mov	 al, 135			; 00000087H
  00011	83 c2 03	 add	 edx, 3
  00014	ee		 out	 dx, al

; 28   :     __outbyte(ComAddr + 1, 0);    // Point to MSB of baud rate divisor

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR _ComAddr
  0001a	40		 inc	 eax
  0001b	66 8b d0	 mov	 dx, ax
  0001e	32 c0		 xor	 al, al
  00020	ee		 out	 dx, al

; 29   :     __outbyte(ComAddr, 1);        // Point to LSB of baud rate divisor

  00021	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR _ComAddr
  00028	fe c0		 inc	 al
  0002a	ee		 out	 dx, al

; 30   :     __outbyte(ComAddr + 3, 3);    // 8 data bits, 1 stop bit, no parity

  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ComAddr
  00031	b0 03		 mov	 al, 3
  00033	83 c2 03	 add	 edx, 3
  00036	ee		 out	 dx, al

; 31   :     Wait1ms();

  00037	e9 00 00 00 00	 jmp	 _Wait1ms
$LN2@Initialize:

; 32   :   }
; 33   :   return;
; 34   : }

  0003c	c3		 ret	 0
_InitializeComPort ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\trace\serial\com.c
;	COMDAT _ComSerialOut
_TEXT	SEGMENT
_str$ = 8						; size = 4
_ComSerialOut PROC					; COMDAT

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 38   :     #if MCP_CHIPSET_ACM_TYPE == AC_BIOSAC
; 39   :   if (Once == 0) {

  00003	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR _Once, 0
  0000a	75 0c		 jne	 SHORT $LN11@ComSerialO

; 40   :     Once = 1;

  0000c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR _Once, 1

; 41   :     InitializeComPort();

  00013	e8 00 00 00 00	 call	 _InitializeComPort
$LN11@ComSerialO:

; 42   :   }
; 43   :     #endif
; 44   : 
; 45   :   while (*str) {

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0001b	eb 33		 jmp	 SHORT $LN21@ComSerialO
$LL4@ComSerialO:

; 46   :     while (0 == (_inp(LineStat) & 0x20)) {

  0001d	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR _LineStat
  00024	ec		 in	 al, dx
  00025	a8 20		 test	 al, 32			; 00000020H
  00027	74 f4		 je	 SHORT $LL4@ComSerialO

; 47   :       ;
; 48   :     }
; 49   :     if ((*str) == 0xa) {

  00029	80 39 0a	 cmp	 BYTE PTR [ecx], 10	; 0000000aH
  0002c	75 16		 jne	 SHORT $LN7@ComSerialO

; 50   :       _outp(ComAddr, 0xd);

  0002e	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR _ComAddr
  00035	b0 0d		 mov	 al, 13			; 0000000dH
  00037	ee		 out	 dx, al
$LL6@ComSerialO:

; 51   :       while (0 == (_inp(LineStat) & 0x20)) {

  00038	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR _LineStat
  0003f	ec		 in	 al, dx
  00040	a8 20		 test	 al, 32			; 00000020H
  00042	74 f4		 je	 SHORT $LL6@ComSerialO
$LN7@ComSerialO:

; 52   :         ;
; 53   :       }
; 54   :     }
; 55   :     _outp(ComAddr, *str++);

  00044	0f b6 01	 movzx	 eax, BYTE PTR [ecx]
  00047	41		 inc	 ecx
  00048	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR _ComAddr
  0004f	ee		 out	 dx, al
$LN21@ComSerialO:

; 42   :   }
; 43   :     #endif
; 44   : 
; 45   :   while (*str) {

  00050	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00053	75 c8		 jne	 SHORT $LL4@ComSerialO

; 56   :   }
; 57   : }

  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
_ComSerialOut ENDP
_TEXT	ENDS
END
