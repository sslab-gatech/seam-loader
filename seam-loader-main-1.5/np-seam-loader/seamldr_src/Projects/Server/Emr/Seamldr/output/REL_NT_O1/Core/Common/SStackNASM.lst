     0                                   ;;; %define __?FILE?__ 
     0                                   ;;; %define __?LINE?__ 
     0                                   ;;; %define __?BITS?__ 
     0                                   ;;; %define __?PTR?__ 
     0                                   ;;; %define __?PASS?__ 2
     0                              <1> %define __?SECT?__
     0                              <1>  ;;; %define __?SECT?__ 
     0                              <1> %defalias __SECT__ __?SECT?__
     0                              <1>  ;;; %defalias __SECT__ __?SECT?__
     0                              <1> %imacro section 1+.nolist
     0                              <1> %define __?SECT?__ [section %1]
     0                              <1> __?SECT?__
     0                              <1> %endmacro 
     0                              <1> %imacro segment 1+.nolist
     0                              <1> %define __?SECT?__ [segment %1]
     0                              <1> __?SECT?__
     0                              <1> %endmacro 
     0                              <1> %define __?SECTALIGN_ALIGN_UPDATES_SECTION?__ 1
     0                              <1>  ;;; %define __?SECTALIGN_ALIGN_UPDATES_SECTION?__ 1
     0                              <1> %imacro sectalign 1+.nolist
     0                              <1> %ifidni %1,off
     0                              <1> %define __?SECTALIGN_ALIGN_UPDATES_SECTION?__ 0
     0                              <1> %elifidni %1,on
     0                              <1> %define __?SECTALIGN_ALIGN_UPDATES_SECTION?__ 1
     0                              <1> %else 
     0                              <1> [sectalign %1]
     0                              <1> %endif 
     0                              <1> %endmacro 
     0                              <1> %defalias __SECTALIGN_ALIGN_UPDATES_SECTION__ __?SECTALIGN_ALIGN_UPDATES_SECTION?__
     0                              <1>  ;;; %defalias __SECTALIGN_ALIGN_UPDATES_SECTION__ __?SECTALIGN_ALIGN_UPDATES_SECTION?__
     0                              <1> %imacro absolute 1+.nolist
     0                              <1> %define __?SECT?__ [absolute %1]
     0                              <1> __?SECT?__
     0                              <1> %endmacro 
     0                              <1> %imacro struc 1-2.nolist 0
     0                              <1> %push 
     0                              <1> %define %$strucname %1
     0                              <1> [absolute %2]
     0                              <1> %$strucname:
     0                              <1> %endmacro 
     0                              <1> %imacro endstruc 0.nolist
     0                              <1> %{$strucname}_size equ ($-%$strucname)
     0                              <1> %pop 
     0                              <1> __?SECT?__
     0                              <1> %endmacro 
     0                              <1> %imacro istruc 1.nolist
     0                              <1> %push 
     0                              <1> %define %$strucname %1
     0                              <1> %$strucstart:
     0                              <1> %endmacro 
     0                              <1> %imacro at 1-2+.nolist
     0                              <1> times (%1-%$strucname)-($-%$strucstart) db 0
     0                              <1> %2
     0                              <1> %endmacro 
     0                              <1> %imacro iend 0.nolist
     0                              <1> times %{$strucname}_size-($-%$strucstart) db 0
     0                              <1> %pop 
     0                              <1> %endmacro 
     0                              <1> %imacro align 1-2+.nolist nop
     0                              <1> %if __?SECTALIGN_ALIGN_UPDATES_SECTION?__
     0                              <1> sectalign %1
     0                              <1> %endif 
     0                              <1> times (((%1) - (($-$$) % (%1))) % (%1)) %2
     0                              <1> %endmacro 
     0                              <1> %imacro alignb 1-2+.nolist
     0                              <1> %if __?SECTALIGN_ALIGN_UPDATES_SECTION?__
     0                              <1> sectalign %1
     0                              <1> %endif 
     0                              <1> %ifempty %2
     0                              <1> [warning push]
     0                              <1> [warning -zeroing]
     0                              <1> resb (((%1) - (($-$$) % (%1))) % (%1))
     0                              <1> [warning pop]
     0                              <1> %else 
     0                              <1> times (((%1) - (($-$$) % (%1))) % (%1)) %2
     0                              <1> %endif 
     0                              <1> %endmacro 
     0                              <1> %imacro bits 1+.nolist
     0                              <1> [bits %1]
     0                              <1> %endmacro 
     0                              <1> %imacro use16 0.nolist
     0                              <1> [bits 16]
     0                              <1> %endmacro 
     0                              <1> %imacro use32 0.nolist
     0                              <1> [bits 32]
     0                              <1> %endmacro 
     0                              <1> %imacro use64 0.nolist
     0                              <1> [bits 64]
     0                              <1> %endmacro 
     0                              <1> %imacro extern 1-*.nolist
     0                              <1> %rep %0
     0                              <1> [extern %1]
     0                              <1> %rotate 1
     0                              <1> %endrep 
     0                              <1> %endmacro 
     0                              <1> %imacro static 1-*.nolist
     0                              <1> %rep %0
     0                              <1> [static %1]
     0                              <1> %rotate 1
     0                              <1> %endrep 
     0                              <1> %endmacro 
     0                              <1> %imacro global 1-*.nolist
     0                              <1> %rep %0
     0                              <1> [global %1]
     0                              <1> %rotate 1
     0                              <1> %endrep 
     0                              <1> %endmacro 
     0                              <1> %imacro required 1-*.nolist
     0                              <1> %rep %0
     0                              <1> [required %1]
     0                              <1> %rotate 1
     0                              <1> %endrep 
     0                              <1> %endmacro 
     0                              <1> %imacro common 1-*.nolist
     0                              <1> %rep %0
     0                              <1> [common %1]
     0                              <1> %rotate 1
     0                              <1> %endrep 
     0                              <1> %endmacro 
     0                              <1> %imacro cpu 1+.nolist
     0                              <1> [cpu %1]
     0                              <1> %endmacro 
     0                              <1> %define __?FLOAT_DAZ?__ nodaz
     0                              <1>  ;;; %define __?FLOAT_DAZ?__ nodaz
     0                              <1> %define __?FLOAT_ROUND?__ near
     0                              <1>  ;;; %define __?FLOAT_ROUND?__ near
     0                              <1> %define __?FLOAT?__ __?FLOAT_DAZ?__,__?FLOAT_ROUND?__
     0                              <1>  ;;; %define __?FLOAT?__ __?FLOAT_DAZ?__,__?FLOAT_ROUND?__
     0                              <1> %defalias __FLOAT_DAZ__ __?FLOAT_DAZ?__
     0                              <1>  ;;; %defalias __FLOAT_DAZ__ __?FLOAT_DAZ?__
     0                              <1> %defalias __FLOAT_ROUND__ __?FLOAT_ROUND?__
     0                              <1>  ;;; %defalias __FLOAT_ROUND__ __?FLOAT_ROUND?__
     0                              <1> %defalias __FLOAT__ __?FLOAT?__
     0                              <1>  ;;; %defalias __FLOAT__ __?FLOAT?__
     0                              <1> %imacro float 1-*.nolist
     0                              <1> %rep %0
     0                              <1> [float %1]
     0                              <1> %ifidni %1,daz
     0                              <1> %define __?FLOAT_DAZ?__ daz
     0                              <1> %elifidni %1,nodaz
     0                              <1> %define __?FLOAT_DAZ?__ nodaz
     0                              <1> %elifidni %1,near
     0                              <1> %define __?FLOAT_ROUND?__ near
     0                              <1> %elifidni %1,up
     0                              <1> %define __?FLOAT_ROUND?__ up
     0                              <1> %elifidni %1,down
     0                              <1> %define __?FLOAT_ROUND?__ down
     0                              <1> %elifidni %1,zero
     0                              <1> %define __?FLOAT_ROUND?__ zero
     0                              <1> %elifidni %1,default
     0                              <1> %define __?FLOAT_DAZ?__ nodaz
     0                              <1> %define __?FLOAT_ROUND?__ near
     0                              <1> %endif 
     0                              <1> %rotate 1
     0                              <1> %endrep 
     0                              <1> %endmacro 
     0                              <1> %imacro default 1+.nolist
     0                              <1> [default %1]
     0                              <1> %endmacro 
     0                              <1> %imacro userel 0.nolist
     0                              <1> [default rel]
     0                              <1> %endmacro 
     0                              <1> %imacro useabs 0.nolist
     0                              <1> [default abs]
     0                              <1> %endmacro 
     0                              <1> %imacro usebnd 0.nolist
     0                              <1> [default bnd]
     0                              <1> %endmacro 
     0                              <1> %imacro usenobnd 0.nolist
     0                              <1> [default nobnd]
     0                              <1> %endmacro 
     0                              <1> %imacro incbin 1-2+.nolist 0
     0                              <1> %push 
     0                              <1> %pathsearch %$dep %1
     0                              <1> %depend %$dep
     0                              <1> %? %$dep,%2
     0                              <1> %pop 
     0                              <1> %endmacro 
     0                              <1> %defalias __NASM_MAJOR__ __?NASM_MAJOR?__
     0                              <1>  ;;; %defalias __NASM_MAJOR__ __?NASM_MAJOR?__
     0                              <1> %defalias __NASM_MINOR__ __?NASM_MINOR?__
     0                              <1>  ;;; %defalias __NASM_MINOR__ __?NASM_MINOR?__
     0                              <1> %defalias __NASM_SUBMINOR__ __?NASM_SUBMINOR?__
     0                              <1>  ;;; %defalias __NASM_SUBMINOR__ __?NASM_SUBMINOR?__
     0                              <1> %defalias __NASM_PATCHLEVEL__ __?NASM_PATCHLEVEL?__
     0                              <1>  ;;; %defalias __NASM_PATCHLEVEL__ __?NASM_PATCHLEVEL?__
     0                              <1> %defalias __NASM_SNAPSHOT__ __?NASM_SNAPSHOT?__
     0                              <1>  ;;; %defalias __NASM_SNAPSHOT__ __?NASM_SNAPSHOT?__
     0                              <1> %defalias __NASM_VERSION_ID__ __?NASM_VERSION_ID?__
     0                              <1>  ;;; %defalias __NASM_VERSION_ID__ __?NASM_VERSION_ID?__
     0                              <1> %defalias __NASM_VER__ __?NASM_VER?__
     0                              <1>  ;;; %defalias __NASM_VER__ __?NASM_VER?__
     0                              <1> %defalias __OUTPUT_FORMAT__ __?OUTPUT_FORMAT?__
     0                              <1>  ;;; %defalias __OUTPUT_FORMAT__ __?OUTPUT_FORMAT?__
     0                              <1> %defalias __DEBUG_FORMAT__ __?DEBUG_FORMAT?__
     0                              <1>  ;;; %defalias __DEBUG_FORMAT__ __?DEBUG_FORMAT?__
     0                              <1> %defalias __DATE__ __?DATE?__
     0                              <1>  ;;; %defalias __DATE__ __?DATE?__
     0                              <1> %defalias __DATE_NUM__ __?DATE_NUM?__
     0                              <1>  ;;; %defalias __DATE_NUM__ __?DATE_NUM?__
     0                              <1> %defalias __TIME__ __?TIME?__
     0                              <1>  ;;; %defalias __TIME__ __?TIME?__
     0                              <1> %defalias __TIME_NUM__ __?TIME_NUM?__
     0                              <1>  ;;; %defalias __TIME_NUM__ __?TIME_NUM?__
     0                              <1> %defalias __UTC_DATE__ __?UTC_DATE?__
     0                              <1>  ;;; %defalias __UTC_DATE__ __?UTC_DATE?__
     0                              <1> %defalias __UTC_DATE_NUM__ __?UTC_DATE_NUM?__
     0                              <1>  ;;; %defalias __UTC_DATE_NUM__ __?UTC_DATE_NUM?__
     0                              <1> %defalias __UTC_TIME__ __?UTC_TIME?__
     0                              <1>  ;;; %defalias __UTC_TIME__ __?UTC_TIME?__
     0                              <1> %defalias __UTC_TIME_NUM__ __?UTC_TIME_NUM?__
     0                              <1>  ;;; %defalias __UTC_TIME_NUM__ __?UTC_TIME_NUM?__
     0                              <1> %defalias __POSIX_TIME__ __?POSIX_TIME?__
     0                              <1>  ;;; %defalias __POSIX_TIME__ __?POSIX_TIME?__
     0                              <1> %defalias __FILE__ __?FILE?__
     0                              <1>  ;;; %defalias __FILE__ __?FILE?__
     0                              <1> %defalias __LINE__ __?LINE?__
     0                              <1>  ;;; %defalias __LINE__ __?LINE?__
     0                              <1> %defalias __BITS__ __?BITS?__
     0                              <1>  ;;; %defalias __BITS__ __?BITS?__
     0                              <1> %defalias __PTR__ __?PTR?__
     0                              <1>  ;;; %defalias __PTR__ __?PTR?__
     0                              <1> %defalias __PASS__ __?PASS?__
     0                              <1>  ;;; %defalias __PASS__ __?PASS?__
     0                              <1> %idefine __?infinity?__ %?
     0                              <1>  ;;; %idefine __?infinity?__ %?
     0                              <1> %idefine __?nan?__ %?
     0                              <1>  ;;; %idefine __?nan?__ %?
     0                              <1> %idefine __?qnan?__ %?
     0                              <1>  ;;; %idefine __?qnan?__ %?
     0                              <1> %idefine __?snan?__ %?
     0                              <1>  ;;; %idefine __?snan?__ %?
     0                              <1> %idefine __?float8?__ %?
     0                              <1>  ;;; %idefine __?float8?__ %?
     0                              <1> %idefine __?float16?__ %?
     0                              <1>  ;;; %idefine __?float16?__ %?
     0                              <1> %idefine __?float32?__ %?
     0                              <1>  ;;; %idefine __?float32?__ %?
     0                              <1> %idefine __?float64?__ %?
     0                              <1>  ;;; %idefine __?float64?__ %?
     0                              <1> %idefine __?float80m?__ %?
     0                              <1>  ;;; %idefine __?float80m?__ %?
     0                              <1> %idefine __?float80e?__ %?
     0                              <1>  ;;; %idefine __?float80e?__ %?
     0                              <1> %idefine __?float128l?__ %?
     0                              <1>  ;;; %idefine __?float128l?__ %?
     0                              <1> %idefine __?float128h?__ %?
     0                              <1>  ;;; %idefine __?float128h?__ %?
     0                              <1> %idefine __?utf16?__ %?
     0                              <1>  ;;; %idefine __?utf16?__ %?
     0                              <1> %idefine __?utf16le?__ %?
     0                              <1>  ;;; %idefine __?utf16le?__ %?
     0                              <1> %idefine __?utf16be?__ %?
     0                              <1>  ;;; %idefine __?utf16be?__ %?
     0                              <1> %idefine __?utf32?__ %?
     0                              <1>  ;;; %idefine __?utf32?__ %?
     0                              <1> %idefine __?utf32le?__ %?
     0                              <1>  ;;; %idefine __?utf32le?__ %?
     0                              <1> %idefine __?utf32be?__ %?
     0                              <1>  ;;; %idefine __?utf32be?__ %?
     0                              <1> %idefine __?ilog2e?__ %?
     0                              <1>  ;;; %idefine __?ilog2e?__ %?
     0                              <1> %idefine __?ilog2w?__ %?
     0                              <1>  ;;; %idefine __?ilog2w?__ %?
     0                              <1> %idefine __?ilog2f?__ %?
     0                              <1>  ;;; %idefine __?ilog2f?__ %?
     0                              <1> %idefine __?ilog2c?__ %?
     0                              <1>  ;;; %idefine __?ilog2c?__ %?
     0                              <1> %idefalias __infinity__ __?infinity?__
     0                              <1>  ;;; %idefalias __infinity__ __?infinity?__
     0                              <1> %idefalias __nan__ __?nan?__
     0                              <1>  ;;; %idefalias __nan__ __?nan?__
     0                              <1> %idefalias __qnan__ __?qnan?__
     0                              <1>  ;;; %idefalias __qnan__ __?qnan?__
     0                              <1> %idefalias __snan__ __?snan?__
     0                              <1>  ;;; %idefalias __snan__ __?snan?__
     0                              <1> %idefalias __float8__ __?float8?__
     0                              <1>  ;;; %idefalias __float8__ __?float8?__
     0                              <1> %idefalias __float16__ __?float16?__
     0                              <1>  ;;; %idefalias __float16__ __?float16?__
     0                              <1> %idefalias __float32__ __?float32?__
     0                              <1>  ;;; %idefalias __float32__ __?float32?__
     0                              <1> %idefalias __float64__ __?float64?__
     0                              <1>  ;;; %idefalias __float64__ __?float64?__
     0                              <1> %idefalias __float80m__ __?float80m?__
     0                              <1>  ;;; %idefalias __float80m__ __?float80m?__
     0                              <1> %idefalias __float80e__ __?float80e?__
     0                              <1>  ;;; %idefalias __float80e__ __?float80e?__
     0                              <1> %idefalias __float128l__ __?float128l?__
     0                              <1>  ;;; %idefalias __float128l__ __?float128l?__
     0                              <1> %idefalias __float128h__ __?float128h?__
     0                              <1>  ;;; %idefalias __float128h__ __?float128h?__
     0                              <1> %idefalias __utf16__ __?utf16?__
     0                              <1>  ;;; %idefalias __utf16__ __?utf16?__
     0                              <1> %idefalias __utf16le__ __?utf16le?__
     0                              <1>  ;;; %idefalias __utf16le__ __?utf16le?__
     0                              <1> %idefalias __utf16be__ __?utf16be?__
     0                              <1>  ;;; %idefalias __utf16be__ __?utf16be?__
     0                              <1> %idefalias __utf32__ __?utf32?__
     0                              <1>  ;;; %idefalias __utf32__ __?utf32?__
     0                              <1> %idefalias __utf32le__ __?utf32le?__
     0                              <1>  ;;; %idefalias __utf32le__ __?utf32le?__
     0                              <1> %idefalias __utf32be__ __?utf32be?__
     0                              <1>  ;;; %idefalias __utf32be__ __?utf32be?__
     0                              <1> %idefalias __ilog2e__ __?ilog2e?__
     0                              <1>  ;;; %idefalias __ilog2e__ __?ilog2e?__
     0                              <1> %idefalias __ilog2w__ __?ilog2w?__
     0                              <1>  ;;; %idefalias __ilog2w__ __?ilog2w?__
     0                              <1> %idefalias __ilog2f__ __?ilog2f?__
     0                              <1>  ;;; %idefalias __ilog2f__ __?ilog2f?__
     0                              <1> %idefalias __ilog2c__ __?ilog2c?__
     0                              <1>  ;;; %idefalias __ilog2c__ __?ilog2c?__
     0                              <1> %define __?NASM_MAJOR?__ 2
     0                              <1>  ;;; %define __?NASM_MAJOR?__ 2
     0                              <1> %define __?NASM_MINOR?__ 15
     0                              <1>  ;;; %define __?NASM_MINOR?__ 15
     0                              <1> %define __?NASM_SUBMINOR?__ 3
     0                              <1>  ;;; %define __?NASM_SUBMINOR?__ 3
     0                              <1> %define __?NASM_PATCHLEVEL?__ 0
     0                              <1>  ;;; %define __?NASM_PATCHLEVEL?__ 0
     0                              <1> %define __?NASM_VERSION_ID?__ 0020F0300h
     0                              <1>  ;;; %define __?NASM_VERSION_ID?__ 0020F0300h
     0                              <1> %define __?NASM_VER?__ "2.15.03"
     0                              <1>  ;;; %define __?NASM_VER?__ "2.15.03"
     0                              <1> %define __?SECT?__ [section .text]
     0                              <1>  ;;; %define __?SECT?__ [section .text]
     0                              <1> %macro __?NASM_CDecl?__ 1
     0                              <1> %endmacro 
     0                              <1> %imacro export 1+.nolist
     0                              <1> [export %1]
     0                              <1> %endmacro 
     0                              <1> %imacro safeseh 1.nolist
     0                              <1> [safeseh %1]
     0                              <1> %endmacro 
     0                              <1> %define __?DATE?__ "2023-05-23"
     0                              <1>  ;;; %define __?DATE?__ "2023-05-23"
     0                              <1> %define __?DATE_NUM?__ 20230523
     0                              <1>  ;;; %define __?DATE_NUM?__ 20230523
     0                              <1> %define __?TIME?__ "11:14:49"
     0                              <1>  ;;; %define __?TIME?__ "11:14:49"
     0                              <1> %define __?TIME_NUM?__ 111449
     0                              <1>  ;;; %define __?TIME_NUM?__ 111449
     0                              <1> %define __?UTC_DATE?__ "2023-05-23"
     0                              <1>  ;;; %define __?UTC_DATE?__ "2023-05-23"
     0                              <1> %define __?UTC_DATE_NUM?__ 20230523
     0                              <1>  ;;; %define __?UTC_DATE_NUM?__ 20230523
     0                              <1> %define __?UTC_TIME?__ "08:14:49"
     0                              <1>  ;;; %define __?UTC_TIME?__ "08:14:49"
     0                              <1> %define __?UTC_TIME_NUM?__ 081449
     0                              <1>  ;;; %define __?UTC_TIME_NUM?__ 081449
     0                              <1> %define __?POSIX_TIME?__ 1684829689
     0                              <1>  ;;; %define __?POSIX_TIME?__ 1684829689
     0                              <1> %define __?OUTPUT_FORMAT?__ win32
     0                              <1>  ;;; %define __?OUTPUT_FORMAT?__ win32
     0                              <1> %define __?DEBUG_FORMAT?__ cv8
     0                              <1>  ;;; %define __?DEBUG_FORMAT?__ cv8
     0                              <1> %define _ARCH_IA32 1
     0                              <1>  ;;; %define _ARCH_IA32 1
     0                              <1> %define _IPP_LE 1
     0                              <1>  ;;; %define _IPP_LE 1
     0                              <1> %define _TXT_ACM_ 1
     0                              <1>  ;;; %define _TXT_ACM_ 1
     0                              <1> %define MKF_ENGINEERING 0
     0                              <1>  ;;; %define MKF_ENGINEERING 0
     0                              <1> %define MKF_TRACE 0
     0                              <1>  ;;; %define MKF_TRACE 0
     0                              <1> %define MKF_USE_MAKEFLAG_H 1
     0                              <1>  ;;; %define MKF_USE_MAKEFLAG_H 1
     0                              <1> %define SIMICS_BLD 0
     0                              <1>  ;;; %define SIMICS_BLD 0
     0                              <1> %define TPR_SUPPORTED 0
     0                              <1>  ;;; %define TPR_SUPPORTED 0
     0                              <1> %define MKF_IBL_SUPPORTED 1
     0                              <1>  ;;; %define MKF_IBL_SUPPORTED 1
     0                              <1> %define TRACE_WITH_FUNCTIONS 0
     0                              <1>  ;;; %define TRACE_WITH_FUNCTIONS 0
     0                              <1> %define MCP_STACK_GAP (16 + 0)
     0                              <1>  ;;; %define MCP_STACK_GAP (16 + 0)
     0                              <1> %define __ASM__ 1
     0                              <1>  ;;; %define __ASM__ 1
     0                              <1> %define ACM_TYPE AC_BIOSAC
     0                              <1>  ;;; %define ACM_TYPE AC_BIOSAC
     0                              <1> %define MCP_SHADOW_STACK_GAP 0
     0                              <1>  ;;; %define MCP_SHADOW_STACK_GAP 0
     1                                  ;**********************************************************************;
     2                                  ;*                                                                    *;
     3                                  ;* Intel Proprietary                                                  *;
     4                                  ;*                                                                    *;
     5                                  ;* Copyright 2021 Intel Corporation All Rights Reserved.              *;
     6                                  ;*                                                                    *;
     7                                  ;* Your use of this software is governed by the TDX Source Code       *;
     8                                  ;* LIMITED USE LICENSE.                                               *;
     9                                  ;*                                                                    *;
    10                                  ;* The Materials are provided "as is," without any express or         *;
    11                                  ;* implied warranty of any kind including warranties of               *;
    12                                  ;* merchantability, non-infringement, title, or fitness for a         *;
    13                                  ;* particular purpose.                                                *;
    14                                  ;*                                                                    *;
    15                                  ;**********************************************************************;
    16                                  
    17                                  %include "AcmCom_NASM.inc"
    18                              <1> ;**********************************************************************;
    19                              <1> ;*                                                                    *;
    20                              <1> ;* Intel Proprietary                                                  *;
    21                              <1> ;*                                                                    *;
    22                              <1> ;* Copyright 2021 Intel Corporation All Rights Reserved.              *;
    23                              <1> ;*                                                                    *;
    24                              <1> ;* Your use of this software is governed by the TDX Source Code       *;
    25                              <1> ;* LIMITED USE LICENSE.                                               *;
    26                              <1> ;*                                                                    *;
    27                              <1> ;* The Materials are provided "as is," without any express or         *;
    28                              <1> ;* implied warranty of any kind including warranties of               *;
    29                              <1> ;* merchantability, non-infringement, title, or fitness for a         *;
    30                              <1> ;* particular purpose.                                                *;
    31                              <1> ;*                                                                    *;
    32                              <1> ;**********************************************************************;
    33                              <1> 
    34                              <1> %ifndef ACMCOM_EQU
    35                              <1> %define ACMCOM_EQU 0
    35                              <1>  ;;; %define ACMCOM_EQU 0
    36                              <1> 
    37                              <1> 
    38                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    39                              <1> ;                       MACROS
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> %define CR0_PG                             0x80000000
    42                              <1>  ;;; %define CR0_PG 0x80000000
    43                              <1> %define CR4_PAE                            0x20
    43                              <1>  ;;; %define CR4_PAE 0x20
    44                              <1> %define CR4_PSE                            0x10
    44                              <1>  ;;; %define CR4_PSE 0x10
    45                              <1> %define PAGE4K                             0x1000
    45                              <1>  ;;; %define PAGE4K 0x1000
    46                              <1> %define _1KB                               0x400
    46                              <1>  ;;; %define _1KB 0x400
    47                              <1> %define _2KB                               0x800
    47                              <1>  ;;; %define _2KB 0x800
    48                              <1> %define _4KB                               0x1000
    48                              <1>  ;;; %define _4KB 0x1000
    49                              <1> %define _4KB_MASK                          (  ~  ( _4KB - 1 ) )
    49                              <1>  ;;; %define _4KB_MASK ( ~ ( _4KB - 1 ) )
    50                              <1> %define IA32_EFER_MSR                      0xC0000080
    50                              <1>  ;;; %define IA32_EFER_MSR 0xC0000080
    51                              <1> %define LME                                0x100
    51                              <1>  ;;; %define LME 0x100
    52                              <1> %define YMM_REG_QWORDS                     4
    52                              <1>  ;;; %define YMM_REG_QWORDS 4
    53                              <1> %define LT_PUB_BASE                        0xFED30000
    53                              <1>  ;;; %define LT_PUB_BASE 0xFED30000
    54                              <1> %define _64KB                              0x10000
    54                              <1>  ;;; %define _64KB 0x10000
    55                              <1> %define LT_PRV_BASE                        0xFED20000
    55                              <1>  ;;; %define LT_PRV_BASE 0xFED20000
    56                              <1> %define BIT0                               0x1
    56                              <1>  ;;; %define BIT0 0x1
    57                              <1> %define BIT8                               0x100
    57                              <1>  ;;; %define BIT8 0x100
    58                              <1> %define BIT11                              0x800
    58                              <1>  ;;; %define BIT11 0x800
    59                              <1> %define CRASH_CODE_VALID                   0x80000000
    59                              <1>  ;;; %define CRASH_CODE_VALID 0x80000000
    60                              <1> %define MSR_CORE_THREAD_COUNT              0x35          ;Can be removed
    60                              <1>  ;;; %define MSR_CORE_THREAD_COUNT 0x35
    61                              <1> %define MSR_SMRR_PHYMASK                   0x1F3          ;Can be removed
    61                              <1>  ;;; %define MSR_SMRR_PHYMASK 0x1F3
    62                              <1> %define ACM_CODE64_SELECTOR                24
    62                              <1>  ;;; %define ACM_CODE64_SELECTOR 24
    63                              <1> %define CRASH_CODE_SW_GENERATED            0x40000000
    63                              <1>  ;;; %define CRASH_CODE_SW_GENERATED 0x40000000
    64                              <1> %define AC_BIOSAC                          0
    64                              <1>  ;;; %define AC_BIOSAC 0
    65                              <1> %define AC_SINIT                           1
    65                              <1>  ;;; %define AC_SINIT 1
    66                              <1> %define ERR_RLP_TIMEOUT                    1
    66                              <1>  ;;; %define ERR_RLP_TIMEOUT 1
    67                              <1> %define ERR_RLP_SMRR_CONFIG                3
    67                              <1>  ;;; %define ERR_RLP_SMRR_CONFIG 3
    68                              <1> %define ERR_RLP_SMRR2_CONFIG               4
    68                              <1>  ;;; %define ERR_RLP_SMRR2_CONFIG 4
    69                              <1> %define CLASS_ACM_EXIT                     7
    69                              <1>  ;;; %define CLASS_ACM_EXIT 7
    70                              <1> %define CLASS_INTERNAL_ERRORS              0x20
    70                              <1>  ;;; %define CLASS_INTERNAL_ERRORS 0x20
    71                              <1> %define ERR_SHADOW_STACK                   1
    71                              <1>  ;;; %define ERR_SHADOW_STACK 1
    72                              <1> %define MSR_IA32_BIOS_SIGN_ID              0x8B
    72                              <1>  ;;; %define MSR_IA32_BIOS_SIGN_ID 0x8B
    73                              <1> %define ERR_NO_RLP_UCODE_UPDATE            2
    73                              <1>  ;;; %define ERR_NO_RLP_UCODE_UPDATE 2
    74                              <1> %define MSR_SMRR_PHYMASK                   0x1F3
    74                              <1>  ;;; %define MSR_SMRR_PHYMASK 0x1F3
    75                              <1> %define MSR_SMRR2_PHYMASK                  0x1F7
    75                              <1>  ;;; %define MSR_SMRR2_PHYMASK 0x1F7
    76                              <1> %define MSR_SMRR2_PHYBASE                  0x1F6
    76                              <1>  ;;; %define MSR_SMRR2_PHYBASE 0x1F6
    77                              <1> %define MSR_IA32_MISC_ENABLES              0x1A0
    77                              <1>  ;;; %define MSR_IA32_MISC_ENABLES 0x1A0
    78                              <1> %define BIT18                              0x40000
    78                              <1>  ;;; %define BIT18 0x40000
    79                              <1> %define GDT_SIZE                           32
    79                              <1>  ;;; %define GDT_SIZE 32
    80                              <1> %define ACM_CODE_SELECTOR                  8
    80                              <1>  ;;; %define ACM_CODE_SELECTOR 8
    81                              <1> %define EXITAC                             3
    81                              <1>  ;;; %define EXITAC 3
    82                              <1> %define SENTER                             4
    82                              <1>  ;;; %define SENTER 4
    83                              <1> %define SEXIT                              5
    83                              <1>  ;;; %define SEXIT 5
    84                              <1> %define WAKEUP                             8
    84                              <1>  ;;; %define WAKEUP 8
    85                              <1> %define _8KB                               0x2000
    85                              <1>  ;;; %define _8KB 0x2000
    86                              <1> %define MSR_SMRR_PHYBASE                   0x1F2
    86                              <1>  ;;; %define MSR_SMRR_PHYBASE 0x1F2
    87                              <1> %define ACM_DATA_SELECTOR                  16
    87                              <1>  ;;; %define ACM_DATA_SELECTOR 16
    88                              <1> %define PORT80                             0x80
    88                              <1>  ;;; %define PORT80 0x80
    89                              <1> %define LBL_ACM                            0x1
    89                              <1>  ;;; %define LBL_ACM 0x1
    90                              <1> %define RFA_VALID                          0x8000
    90                              <1>  ;;; %define RFA_VALID 0x8000
    91                              <1> %define IDT32GATE_INIT_1                   0x8E00
    91                              <1>  ;;; %define IDT32GATE_INIT_1 0x8E00
    92                              <1> %define VACANT                             0x00
    92                              <1>  ;;; %define VACANT 0x00
    93                              <1> %define NOT_VACANT                         0x0ff
    93                              <1>  ;;; %define NOT_VACANT 0x0ff
    94                              <1> %define CR4_PGE                            (1 << 7)
    94                              <1>  ;;; %define CR4_PGE (1 << 7)
    95                              <1> %define ENTERACCS				           2
    95                              <1>  ;;; %define ENTERACCS 2
    96                              <1> %define MSR_BIOS_SE_SVN                    0x302
    96                              <1>  ;;; %define MSR_BIOS_SE_SVN 0x302
    97                              <1> %define MSR_BIOS_DONE    			       0x151
    97                              <1>  ;;; %define MSR_BIOS_DONE 0x151
    98                              <1> %define MSR_PLATFORM_INFO    			   0xCE
    98                              <1>  ;;; %define MSR_PLATFORM_INFO 0xCE
    99                              <1> %define MSR_PLATFORM_INFO_SAMPLE_PART	   (1 << 27)
    99                              <1>  ;;; %define MSR_PLATFORM_INFO_SAMPLE_PART (1 << 27)
   100                              <1> %define CR0_WP                             (1 << 16)
   100                              <1>  ;;; %define CR0_WP (1 << 16)
   101                              <1> %define CR4_PAE        					   (1 << 5)
   101                              <1>  ;;; %define CR4_PAE (1 << 5)
   102                              <1> %define CR4_PGE 					       (1 << 7)
   102                              <1>  ;;; %define CR4_PGE (1 << 7)
   103                              <1> %define CR4_LA57					       (1 << 12)
   103                              <1>  ;;; %define CR4_LA57 (1 << 12)
   104                              <1> %define CR4_SMXE                           (1 << 14)
   104                              <1>  ;;; %define CR4_SMXE (1 << 14)
   105                              <1> 
   106                              <1> %define MF_PRODUCTION      0
   106                              <1>  ;;; %define MF_PRODUCTION 0
   107                              <1> %define MF_DEBUG           (1 << 15)
   107                              <1>  ;;; %define MF_DEBUG (1 << 15)
   108                              <1> %define MF_PROD_WORTHY     0
   108                              <1>  ;;; %define MF_PROD_WORTHY 0
   109                              <1> %define MF_NOT_PROD_WORTHY (1 << 14)
   109                              <1>  ;;; %define MF_NOT_PROD_WORTHY (1 << 14)
   110                              <1> 
   111                              <1> 
   112                              <1> ; T_DATA no longer used after code changes
   113                              <1> 
   114                              <1> %define _GETSEC         db      0x0F, 0x37
   114                              <1>  ;;; %define _GETSEC db 0x0F, 0x37
   115                              <1> %define _MONITOR        db      0x0F, 0x01, 0x0C8
   115                              <1>  ;;; %define _MONITOR db 0x0F, 0x01, 0x0C8
   116                              <1> %define _MWAIT          db      0x0F, 0x01, 0x0C9
   116                              <1>  ;;; %define _MWAIT db 0x0F, 0x01, 0x0C9
   117                              <1> 
   118                              <1> ; append underscore to globals
   119                              <1> %pragma win32 gprefix _
   119                              <1>  ;;; [pragma win32 gprefix _]
   120                              <1> 
   121                              <1> %ifidn __OUTPUT_FORMAT__, win64
   122                              <1> DEFAULT REL      ; needed to instruct NASM to emit RIP-relative code
   123                              <1> %endif
   124                              <1> 
   125                              <1> %macro GETSEC_EXITAC 0
   126                              <1>         mov     eax, EXITAC                  ; GETSEC (EAX=3) for ExitAC
   127                              <1>         mov     ebx, %%RETURN_ADDRESS
   128                              <1>         xor     ecx, ecx
   129                              <1>         xor     edx, edx
   130                              <1>         _GETSEC
   131                              <1> %%RETURN_ADDRESS:
   132                              <1> %endmacro
   133                              <1> 
   134                              <1> %macro GETSEC_WAKEUP 0
   135                              <1>         mov     eax, WAKEUP                  ; GETSEC (EAX=8) for WAKEUP
   136                              <1>         xor     ebx, ebx
   137                              <1>         xor     ecx, ecx
   138                              <1>         xor     edx, edx
   139                              <1>         _GETSEC
   140                              <1> %endmacro
   141                              <1> 
   142                              <1> %macro GETSEC_SEXIT 0
   143                              <1>         mov     eax, SEXIT                  ; GETSEC (EAX=5) for SEXIT
   144                              <1>         xor     ebx, ebx
   145                              <1>         xor     ecx, ecx
   146                              <1>         xor     edx, edx
   147                              <1>         _GETSEC
   148                              <1> %endmacro
   149                              <1> 
   150                              <1> %macro TDATA_VAR  0
   151                              <1>         ;
   152                              <1>         ; Changing hardcoded T_DATA onto one retrieved from SINIT size
   153                              <1>         ;
   154                              <1>         mov     edi, LT_PUB_BASE + TXT.LT_SINIT_SIZE
   155                              <1>         mov     edi, DWORD [edi]    ; Get SINIT region size
   156                              <1>         add     edi, ebp
   157                              <1>         sub     edi, _64KB
   158                              <1> %endmacro
   159                              <1> %define TDATA_VAR_RET_VAL(x)  [edi + x] ; Sighting #3865476  End
   159                              <1>  ;;; %define TDATA_VAR_RET_VAL(x) [edi + x]
   160                              <1> 
   161                              <1> %macro TDATA_VAR_OFFSET_IN_EAX        1
   162                              <1>         ;
   163                              <1>         ; ebp keeps address of SINIT module in memory
   164                              <1>         ;
   165                              <1>         ; Changing hardcoded T_DATA onto one retrieved from SINIT size
   166                              <1>         ;
   167                              <1>         mov     edi, LT_PUB_BASE + TXT.LT_SINIT_SIZE
   168                              <1>         mov     eax, DWORD [edi]    ; Get SINIT region size
   169                              <1>         sub     eax, _64KB
   170                              <1>         add     eax, ebp
   171                              <1>         add     eax, %1
   172                              <1> 
   173                              <1> %endmacro
   174                              <1> 
   175                              <1> %define EDATA_VAR(x)    [ebp +  x]
   175                              <1>  ;;; %define EDATA_VAR(x) [ebp + x]
   176                              <1> 
   177                              <1> 
   178                              <1> %macro EDATA_VAR_OFFSET_IN_EAX        1
   179                              <1>         ;;
   180                              <1>         ;; ebp keeps address of SINIT module in memory
   181                              <1>         ;;
   182                              <1>         mov     eax, ebp
   183                              <1>         add     eax, %1
   184                              <1> %endmacro
   185                              <1> 
   186                              <1> %macro PROGRESS_MARK    1
   187                              <1>         push BYTE %1
   188                              <1>         call  ProgressMark
   189                              <1>         %if MKF_ENGINEERING eq 1
   190                              <1>                 %if MKF_TRACE EQ 1
   191                              <1>                         extern TraceProgress
   192                              <1>                         push DWORD %1
   193                              <1>                         call  TraceProgress
   194                              <1> 
   195                              <1>                 %endif
   196                              <1>         %endif
   197                              <1> %endmacro
   198                              <1> 
   199                              <1> %macro TRAMPOLINE_ERROR    1
   200                              <1>         %if MKF_ENGINEERING eq 1
   201                              <1>                 %if MKF_TRACE EQ 1
   202                              <1>                         extern TraceTrampolineCodeError
   203                              <1>                         push DWORD %1
   204                              <1>                         call TraceTrampolineCodeError
   205                              <1> 
   206                              <1>                 %endif
   207                              <1>         %endif
   208                              <1> %endmacro
   209                              <1> 
   210                              <1> %macro STACK_TEST_FILL_IN       0
   211                              <1> %if (MKF_ENGINEERING == 1)
   212                              <1>         mov     edi, stackStart
   213                              <1>         mov     ecx, esp
   214                              <1>         sub     ecx, stackStart
   215                              <1>         shr     ecx, 2
   216                              <1>         mov     eax, 0CCCCCCCCh
   217                              <1>         rep     stosd
   218                              <1> %endif
   219                              <1> %endmacro
   220                              <1> 
   221                              <1> 
   222                              <1> %define FILL64(H,L)     ( ( ( ( H ) - ( L ) ) / 8 ) - 1 )
   222                              <1>  ;;; %define FILL64(H,L) ( ( ( ( H ) - ( L ) ) / 8 ) - 1 )
   223                              <1> %define FILL8(H,L)      ( ( ( H ) - ( L ) ) - 1 )
   223                              <1>  ;;; %define FILL8(H,L) ( ( ( H ) - ( L ) ) - 1 )
   224                              <1> 
   225                              <1> ;%macro FILL64    2
   226                              <1> ;        exitm <( ( ( ( %1 ) - ( %2 ) ) / 8 ) - 1 ) >
   227                              <1> ;%endmacro
   228                              <1> ;
   229                              <1> ;%macro FILL8    2
   230                              <1> ;        exitm <( ( ( %1 ) - ( %2 ) ) - 1 ) >
   231                              <1> ;%endmacro
   232                              <1> 
   233                              <1> %define CR_Valid_cr                     1
   233                              <1>  ;;; %define CR_Valid_cr 1
   234                              <1> %define CR_SwGenerated_cr               1
   234                              <1>  ;;; %define CR_SwGenerated_cr 1
   235                              <1> %define CR_Res_cr                       5
   235                              <1>  ;;; %define CR_Res_cr 5
   236                              <1> %define CR_Minor_cr                     9
   236                              <1>  ;;; %define CR_Minor_cr 9
   237                              <1> %define CR_Source_cr                    1
   237                              <1>  ;;; %define CR_Source_cr 1
   238                              <1> %define CR_Major_cr                     5
   238                              <1>  ;;; %define CR_Major_cr 5
   239                              <1> %define CR_Class_cr                     6
   239                              <1>  ;;; %define CR_Class_cr 6
   240                              <1> %define CR_AcmType_cr                   4
   240                              <1>  ;;; %define CR_AcmType_cr 4
   241                              <1> 
   242                              <1> %define CR_Valid_cr_position                     31
   242                              <1>  ;;; %define CR_Valid_cr_position 31
   243                              <1> %define CR_SwGenerated_cr_position               30
   243                              <1>  ;;; %define CR_SwGenerated_cr_position 30
   244                              <1> %define CR_Res_cr_position                       25
   244                              <1>  ;;; %define CR_Res_cr_position 25
   245                              <1> %define CR_Minor_cr_position                     16
   245                              <1>  ;;; %define CR_Minor_cr_position 16
   246                              <1> %define CR_Source_cr_position                    15
   246                              <1>  ;;; %define CR_Source_cr_position 15
   247                              <1> %define CR_Major_cr_position                     10
   247                              <1>  ;;; %define CR_Major_cr_position 10
   248                              <1> %define CR_Class_cr_position                     4
   248                              <1>  ;;; %define CR_Class_cr_position 4
   249                              <1> %define CR_AcmType_cr_position                   0
   249                              <1>  ;;; %define CR_AcmType_cr_position 0
   250                              <1> 
   251                              <1> ;
   252                              <1> ; Crash register record
   253                              <1> ;
   254                              <1> ;CR      RECORD  Valid_cr:1,SwGenerated_cr:1,Res_cr:5,Minor_cr:9,Source_cr:1,Major_cr:5,Class_cr:6,AcmType_cr:4
   255                              <1> ;
   256                              <1> ; Policy control record
   257                              <1> ;
   258                              <1> ;PC      RECORD  Res2_pc:28,OWN_REQ_pc:1,CAP_EXT_pc:1,NPW_OK_pc:1,RES_pc:1
   259                              <1> 
   260                              <1> 
   261                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   262                              <1> ;                STRUCTURE DEFINITIONS
   263                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   264                              <1> 
   265                              <1> ;TXT STRUCTURE
   266                              <1> 
   267                              <1> struc TXT
   267                              <2>  ;;; [macro] struc {TXT},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::1] %$strucname TXT
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; TXT:
   268                              <1> .LT_STS:                          resq   1
   268 00000000 ????????????????    <1>  ;;; .LT_STS: resq 1
   269                              <1> ;// 0000h
   270                              <1> .LT_ESTS:                         resq   1
   270 00000008 ????????????????    <1>  ;;; .LT_ESTS: resq 1
   271                              <1> ;// 0008h
   272                              <1> .LT_THREADS_EXISTS:               resq   1
   272 00000010 ????????????????    <1>  ;;; .LT_THREADS_EXISTS: resq 1
   273                              <1> ;// 0010h
   274                              <1> .R1_0:                            resq   1
   274 00000018 ????????????????    <1>  ;;; .R1_0: resq 1
   275                              <1> ;// 0018h
   276                              <1> .LT_THREADS_JOIN:                 resq   1
   276 00000020 ????????????????    <1>  ;;; .LT_THREADS_JOIN: resq 1
   277                              <1> ;// 0020h
   278                              <1> .R1_1:                            resq   1
   278 00000028 ????????????????    <1>  ;;; .R1_1: resq 1
   279                              <1> ;// 0028h
   280                              <1> .LT_CRASH:                        resq   1
   280 00000030 ????????????????    <1>  ;;; .LT_CRASH: resq 1
   281                              <1> ;// 0030h
   282                              <1> .LT_CMD_SYS_RESET:                resq   1
   282 00000038 ????????????????    <1>  ;;; .LT_CMD_SYS_RESET: resq 1
   283                              <1> ;// 0038h
   284                              <1> .LT_CMD_OPEN_PRIVATE:             resq   1
   284 00000040 ????????????????    <1>  ;;; .LT_CMD_OPEN_PRIVATE: resq 1
   285                              <1> ;// 0040h
   286                              <1> .LT_CMD_CLOSE_PRIVATE:            resq   1
   286 00000048 ????????????????    <1>  ;;; .LT_CMD_CLOSE_PRIVATE: resq 1
   287                              <1> ;// 0048h
   288                              <1> .LT_CRASH2:                       resq   1
   288 00000050 ????????????????    <1>  ;;; .LT_CRASH2: resq 1
   289                              <1> ;// 0050h
   290                              <1> .R2_0:                            resq FILL64(0x0A0,0x50)
   290 00000058 <res 72>            <1>  ;;; .R2_0: resq ( ( ( ( 0x0A0 ) - ( 0x50 ) ) / 8 ) - 1 )
   291                              <1> .LT_SPAD:                         resq   1
   291 000000A0 ????????????????    <1>  ;;; .LT_SPAD: resq 1
   292                              <1> ;// 00A0h
   293                              <1> .R3_0:                            resq FILL64(0x100,0x0A0)
   293 000000A8 <res 88>            <1>  ;;; .R3_0: resq ( ( ( ( 0x100 ) - ( 0x0A0 ) ) / 8 ) - 1 )
   294                              <1> .LT_VER_FSBIF:                    resq   1
   294 00000100 ????????????????    <1>  ;;; .LT_VER_FSBIF: resq 1
   295                              <1> ;// 0100h
   296                              <1> .R3_1:                            resq   1
   296 00000108 ????????????????    <1>  ;;; .R3_1: resq 1
   297                              <1> ;// 0108h
   298                              <1> .LT_DIDVID:                       resq   1
   298 00000110 ????????????????    <1>  ;;; .LT_DIDVID: resq 1
   299                              <1> ;// 0110h
   300                              <1> .LT_EID:                          resq   1
   300 00000118 ????????????????    <1>  ;;; .LT_EID: resq 1
   301                              <1> ;// 0118h
   302                              <1> .R4_0:                            resq FILL64(0x200,0x118)
   302 00000120 <res 224>           <1>  ;;; .R4_0: resq ( ( ( ( 0x200 ) - ( 0x118 ) ) / 8 ) - 1 )
   303                              <1> .LT_VER_EMIF:                     resq   1
   303 00000200 ????????????????    <1>  ;;; .LT_VER_EMIF: resq 1
   304                              <1> ;// 0200h
   305                              <1> .R4_1:                            resq   1
   305 00000208 ????????????????    <1>  ;;; .R4_1: resq 1
   306                              <1> ;// 0208h
   307                              <1> .LT_CMD_LOCKMEM_CONFIG:           resq   1
   307 00000210 ????????????????    <1>  ;;; .LT_CMD_LOCKMEM_CONFIG: resq 1
   308                              <1> ;// 0210h
   309                              <1> .LT_CMD_UNLOCK_MEM_CONFIG:        resq   1
   309 00000218 ????????????????    <1>  ;;; .LT_CMD_UNLOCK_MEM_CONFIG: resq 1
   310                              <1> ;// 0218h
   311                              <1> .LT_CMD_UNLOCK_MEMORY:            resq   1
   311 00000220 ????????????????    <1>  ;;; .LT_CMD_UNLOCK_MEMORY: resq 1
   312                              <1> ;// 0220h
   313                              <1> .R4_2:                            resq   1
   313 00000228 ????????????????    <1>  ;;; .R4_2: resq 1
   314                              <1> ;// 0228h
   315                              <1> .LT_LOCK_BASE:                    resq   1
   315 00000230 ????????????????    <1>  ;;; .LT_LOCK_BASE: resq 1
   316                              <1> ;// 0230h
   317                              <1> .LT_UNLOCK_BASE:                  resq   1
   317 00000238 ????????????????    <1>  ;;; .LT_UNLOCK_BASE: resq 1
   318                              <1> ;// 0238h
   319                              <1> .R4_3:                            resq   1
   319 00000240 ????????????????    <1>  ;;; .R4_3: resq 1
   320                              <1> ;// 0240h
   321                              <1> .R4_4:                            resq   1
   321 00000248 ????????????????    <1>  ;;; .R4_4: resq 1
   322                              <1> ;// 0248h
   323                              <1> .LT_CMD_CACHE_INVALIDATE:         resq   1
   323 00000250 ????????????????    <1>  ;;; .LT_CMD_CACHE_INVALIDATE: resq 1
   324                              <1> ;// 0250h
   325                              <1> .LT_CMD_FLUSH_WB:                 resq   1
   325 00000258 ????????????????    <1>  ;;; .LT_CMD_FLUSH_WB: resq 1
   326                              <1> ;// 0258h
   327                              <1> .LT_NODMA_BASE:                   resq   1
   327 00000260 ????????????????    <1>  ;;; .LT_NODMA_BASE: resq 1
   328                              <1> ;// 0260h
   329                              <1> .LT_NODMA_SIZE:                   resq   1
   329 00000268 ????????????????    <1>  ;;; .LT_NODMA_SIZE: resq 1
   330                              <1> ;// 0268h
   331                              <1> .LT_SINIT_BASE:                   resq   1
   331 00000270 ????????????????    <1>  ;;; .LT_SINIT_BASE: resq 1
   332                              <1> ;// 0270h
   333                              <1> .LT_SINIT_SIZE:                   resq   1
   333 00000278 ????????????????    <1>  ;;; .LT_SINIT_SIZE: resq 1
   334                              <1> ;// 0278h
   335                              <1> .LT_CMD_LOCK_PMRC:                resq   1
   335 00000280 ????????????????    <1>  ;;; .LT_CMD_LOCK_PMRC: resq 1
   336                              <1> ;// 0280h
   337                              <1> .LT_CMD_UNLOCK_PMRC:              resq   1
   337 00000288 ????????????????    <1>  ;;; .LT_CMD_UNLOCK_PMRC: resq 1
   338                              <1> ;// 0288h
   339                              <1> .LT_MLE_JOIN:                     resq   1
   339 00000290 ????????????????    <1>  ;;; .LT_MLE_JOIN: resq 1
   340                              <1> ;// 0290h
   341                              <1> .R4_5:                            resq   1
   341 00000298 ????????????????    <1>  ;;; .R4_5: resq 1
   342                              <1> ;// 0298h
   343                              <1> .LT_BLOCKMAP_CAP:                 resq   1
   343 000002A0 ????????????????    <1>  ;;; .LT_BLOCKMAP_CAP: resq 1
   344                              <1> ;// 02A0h
   345                              <1> .LT_BLOCKMAP_CNF:                 resq   1
   345 000002A8 ????????????????    <1>  ;;; .LT_BLOCKMAP_CNF: resq 1
   346                              <1> ;// 02A8h
   347                              <1> .LT_BLOCKMAP_POINTER:             resq   1
   347 000002B0 ????????????????    <1>  ;;; .LT_BLOCKMAP_POINTER: resq 1
   348                              <1> ;// 02B0h
   349                              <1> .R4_6:                            resq   1
   349 000002B8 ????????????????    <1>  ;;; .R4_6: resq 1
   350                              <1> ;// 02B8h
   351                              <1> .LT_CMD_BLOCKMAP_EN:              resq   1
   351 000002C0 ????????????????    <1>  ;;; .LT_CMD_BLOCKMAP_EN: resq 1
   352                              <1> ;// 02C0h
   353                              <1> .LT_CMD_BLOCKMAP_DIS:             resq   1
   353 000002C8 ????????????????    <1>  ;;; .LT_CMD_BLOCKMAP_DIS: resq 1
   354                              <1> ;// 02C8h
   355                              <1> .LT_CMD_NODMA_CACHE_EN:           resq   1
   355 000002D0 ????????????????    <1>  ;;; .LT_CMD_NODMA_CACHE_EN: resq 1
   356                              <1> ;// 02D0h
   357                              <1> .LT_CMD_NODMA_CACHE_DIS:          resq   1
   357 000002D8 ????????????????    <1>  ;;; .LT_CMD_NODMA_CACHE_DIS: resq 1
   358                              <1> ;// 02D8h
   359                              <1> .LT_CMD_NODMA_TABLE_PROTECT_EN:   resq   1
   359 000002E0 ????????????????    <1>  ;;; .LT_CMD_NODMA_TABLE_PROTECT_EN: resq 1
   360                              <1> ;// 02E0h
   361                              <1> .LT_CMD_NODMA_TABLE_PROTECT_DIS:  resq   1
   361 000002E8 ????????????????    <1>  ;;; .LT_CMD_NODMA_TABLE_PROTECT_DIS: resq 1
   362                              <1> ;// 02E8h
   363                              <1> .LT_CMD_MEM_CONFIG_CHECKED:       resq   1
   363 000002F0 ????????????????    <1>  ;;; .LT_CMD_MEM_CONFIG_CHECKED: resq 1
   364                              <1> ;// 02F0h
   365                              <1> .R4_7:                            resq   1
   365 000002F8 ????????????????    <1>  ;;; .R4_7: resq 1
   366                              <1> ;// 02F8h
   367                              <1> .LT_HEAP_BASE:                    resq   1
   367 00000300 ????????????????    <1>  ;;; .LT_HEAP_BASE: resq 1
   368                              <1> ;// 0300h
   369                              <1> .LT_HEAP_SIZE:                    resq   1
   369 00000308 ????????????????    <1>  ;;; .LT_HEAP_SIZE: resq 1
   370                              <1> ;// 0308h
   371                              <1> .LT_MSEG_BASE:                    resq   1
   371 00000310 ????????????????    <1>  ;;; .LT_MSEG_BASE: resq 1
   372                              <1> ;// 0310h
   373                              <1> .LT_MSEG_SIZE:                    resq   1
   373 00000318 ????????????????    <1>  ;;; .LT_MSEG_SIZE: resq 1
   374                              <1> ;// 0318h
   375                              <1> .LT_SCRATCHPAD_0:                 resq   1
   375 00000320 ????????????????    <1>  ;;; .LT_SCRATCHPAD_0: resq 1
   376                              <1> ;// 0320h
   377                              <1> .LT_BIOSACMCode:                  resd   1
   377 00000328 ????????            <1>  ;;; .LT_BIOSACMCode: resd 1
   378                              <1> ;// 0328h
   379                              <1> .LT_ACM_BIOS_POLICY:              resd   1
   379 0000032C ????????            <1>  ;;; .LT_ACM_BIOS_POLICY: resd 1
   380                              <1> ;// 032ch
   381                              <1> .LT_DPR:                          resq   1
   381 00000330 ????????????????    <1>  ;;; .LT_DPR: resq 1
   382                              <1> ;// 0330h
   383                              <1> .R4_8:                            resq   1
   383 00000338 ????????????????    <1>  ;;; .R4_8: resq 1
   384                              <1> ;// 0338h
   385                              <1> .LT_FIT_STATUS:                   resq   1
   385 00000340 ????????????????    <1>  ;;; .LT_FIT_STATUS: resq 1
   386                              <1> ;// 0340h
   387                              <1> .R4_9:                            resq   1
   387 00000348 ????????????????    <1>  ;;; .R4_9: resq 1
   388                              <1> ;// 0348h
   389                              <1> .LT_INCREMENT:                    resq   1
   389 00000350 ????????????????    <1>  ;;; .LT_INCREMENT: resq 1
   390                              <1> ;// 0350h
   391                              <1> .LT_SPAD_3:                       resq   1
   391 00000358 ????????????????    <1>  ;;; .LT_SPAD_3: resq 1
   392                              <1> ;// 0358h
   393                              <1> .LT_SCRATCHPAD_4:                 resq   1
   393 00000360 ????????????????    <1>  ;;; .LT_SCRATCHPAD_4: resq 1
   394                              <1> ;// 0360h
   395                              <1> .LT_SCRATCHPAD_5:                 resq   1
   395 00000368 ????????????????    <1>  ;;; .LT_SCRATCHPAD_5: resq 1
   396                              <1> ;// 0368h
   397                              <1> .LT_INCREMENT_2:                  resq   1
   397 00000370 ????????????????    <1>  ;;; .LT_INCREMENT_2: resq 1
   398                              <1> ;// 0370h
   399                              <1> .LT_SCRATCHPAD_6:                 resq   1
   399 00000378 ????????????????    <1>  ;;; .LT_SCRATCHPAD_6: resq 1
   400                              <1> ;// 0378h
   401                              <1> .LT_CMD_OPEN_LOCALITY1:           resq   1
   401 00000380 ????????????????    <1>  ;;; .LT_CMD_OPEN_LOCALITY1: resq 1
   402                              <1> ;// 0380h
   403                              <1> .LT_CMD_CLOSE_LOCALITY1:          resq   1
   403 00000388 ????????????????    <1>  ;;; .LT_CMD_CLOSE_LOCALITY1: resq 1
   404                              <1> ;// 0388h
   405                              <1> .LT_CMD_OPEN_LOCALITY2:           resq   1
   405 00000390 ????????????????    <1>  ;;; .LT_CMD_OPEN_LOCALITY2: resq 1
   406                              <1> ;// 0390h
   407                              <1> .LT_CMD_CLOSE_LOCALITY2:          resq   1
   407 00000398 ????????????????    <1>  ;;; .LT_CMD_CLOSE_LOCALITY2: resq 1
   408                              <1> ;// 0398h
   409                              <1> .LT_CMD_OPEN_LOCALITY3:           resq   1
   409 000003A0 ????????????????    <1>  ;;; .LT_CMD_OPEN_LOCALITY3: resq 1
   410                              <1> ;// 03A0h
   411                              <1> .LT_CMD_CLOSE_LOCALITY3:          resq   1
   411 000003A8 ????????????????    <1>  ;;; .LT_CMD_CLOSE_LOCALITY3: resq 1
   412                              <1> ;// 03A8h
   413                              <1> .R5_0:                            resq FILL64(0x400,0x3A8)
   413 000003B0 <res 80>            <1>  ;;; .R5_0: resq ( ( ( ( 0x400 ) - ( 0x3A8 ) ) / 8 ) - 1 )
   414                              <1> .LT_PUBLIC_KEY:                   resq   1
   414 00000400 ????????????????    <1>  ;;; .LT_PUBLIC_KEY: resq 1
   415                              <1> ;// 0400h
   416                              <1> .R5_1:                            resq FILL64(0x608,0x400)
   416 00000408 <res 512>           <1>  ;;; .R5_1: resq ( ( ( ( 0x608 ) - ( 0x400 ) ) / 8 ) - 1 )
   417                              <1> .LT_ESTS_SET:                     resq   1
   417 00000608 ????????????????    <1>  ;;; .LT_ESTS_SET: resq 1
   418                              <1> ;// 0608h
   419                              <1> .LT_EXISTS_SET:                   resq   1
   419 00000610 ????????????????    <1>  ;;; .LT_EXISTS_SET: resq 1
   420                              <1> ;// 0610h
   421                              <1> .R5_2:                            resq   1
   421 00000618 ????????????????    <1>  ;;; .R5_2: resq 1
   422                              <1> ;// 0618h
   423                              <1> .LT_JOINS_SET:                    resq   1
   423 00000620 ????????????????    <1>  ;;; .LT_JOINS_SET: resq 1
   424                              <1> ;// 0620h
   425                              <1> .R6_0:                            resq FILL64(0x670,0x620)
   425 00000628 <res 72>            <1>  ;;; .R6_0: resq ( ( ( ( 0x670 ) - ( 0x620 ) ) / 8 ) - 1 )
   426                              <1> .LT_SCLEAN_SET:                   resq   1
   426 00000670 ????????????????    <1>  ;;; .LT_SCLEAN_SET: resq 1
   427                              <1> ;// 0670h
   428                              <1> .R7_0:                            resq FILL64(0x6A0,0x670)
   428 00000678 <res 40>            <1>  ;;; .R7_0: resq ( ( ( ( 0x6A0 ) - ( 0x670 ) ) / 8 ) - 1 )
   429                              <1> .LT_SPAD_SET:                     resq   1
   429 000006A0 ????????????????    <1>  ;;; .LT_SPAD_SET: resq 1
   430                              <1> ;// 06A0h
   431                              <1> .R8_0:                            resq FILL64(0x710,0x6A0)
   431 000006A8 <res 104>           <1>  ;;; .R8_0: resq ( ( ( ( 0x710 ) - ( 0x6A0 ) ) / 8 ) - 1 )
   432                              <1> .LT_EXISTS_CLEAR:                 resq   1
   432 00000710 ????????????????    <1>  ;;; .LT_EXISTS_CLEAR: resq 1
   433                              <1> ;// 0710h
   434                              <1> .R8_1:                            resq   1
   434 00000718 ????????????????    <1>  ;;; .R8_1: resq 1
   435                              <1> ;// 0718h
   436                              <1> .LT_JOINS_CLEAR:                  resq   1
   436 00000720 ????????????????    <1>  ;;; .LT_JOINS_CLEAR: resq 1
   437                              <1> ;// 0720h
   438                              <1> .R9_0:                            resq FILL64(0x770,0x720)
   438 00000728 <res 72>            <1>  ;;; .R9_0: resq ( ( ( ( 0x770 ) - ( 0x720 ) ) / 8 ) - 1 )
   439                              <1> .LT_SCLEAN_CLEAR:                 resq   1
   439 00000770 ????????????????    <1>  ;;; .LT_SCLEAN_CLEAR: resq 1
   440                              <1> ;// 0770h
   441                              <1> .R10_0:                           resq FILL64(0x7A0,0x770)
   441 00000778 <res 40>            <1>  ;;; .R10_0: resq ( ( ( ( 0x7A0 ) - ( 0x770 ) ) / 8 ) - 1 )
   442                              <1> .LT_SPAD_CLEAR:                   resq   1
   442 000007A0 ????????????????    <1>  ;;; .LT_SPAD_CLEAR: resq 1
   443                              <1> ;// 07A0h
   444                              <1> .R11_0:                           resq FILL64(0x800,0x7A0)
   444 000007A8 <res 88>            <1>  ;;; .R11_0: resq ( ( ( ( 0x800 ) - ( 0x7A0 ) ) / 8 ) - 1 )
   445                              <1> .LT_VER_FTIF:                     resq   1
   445 00000800 ????????????????    <1>  ;;; .LT_VER_FTIF: resq 1
   446                              <1> ;// 0800h
   447                              <1> .R11_1:                           resq   1
   447 00000808 ????????????????    <1>  ;;; .R11_1: resq 1
   448                              <1> ;// 0808h
   449                              <1> .LT_PCH_DIDVID:                   resq   1
   449 00000810 ????????????????    <1>  ;;; .LT_PCH_DIDVID: resq 1
   450                              <1> ;// 0810h
   451                              <1> .R12_0:                           resq FILL64(0x880,0x810)
   451 00000818 <res 104>           <1>  ;;; .R12_0: resq ( ( ( ( 0x880 ) - ( 0x810 ) ) / 8 ) - 1 )
   452                              <1> .LT_UCS:                          resq   1
   452 00000880 ????????????????    <1>  ;;; .LT_UCS: resq 1
   453                              <1> ;// 880h
   454                              <1> .R13_0:                           resq FILL64(0x8E0,0x880)
   454 00000888 <res 88>            <1>  ;;; .R13_0: resq ( ( ( ( 0x8E0 ) - ( 0x880 ) ) / 8 ) - 1 )
   455                              <1> .LT_CMD_SECRETS:                  resq   1
   455 000008E0 ????????????????    <1>  ;;; .LT_CMD_SECRETS: resq 1
   456                              <1> ;// 08E0h
   457                              <1> .LT_CMD_NO_SECRETS:               resq   1
   457 000008E8 ????????????????    <1>  ;;; .LT_CMD_NO_SECRETS: resq 1
   458                              <1> ;// 08E8h
   459                              <1> .LT_E2STS:                        resq   1
   459 000008F0 ????????????????    <1>  ;;; .LT_E2STS: resq 1
   460                              <1> ;// 08F0h
   461                              <1> .R13_1:                           resq   1
   461 000008F8 ????????????????    <1>  ;;; .R13_1: resq 1
   462                              <1> ;// 08F8h
   463                              <1> .LT_FT_REGS1:                     resd   1
   463 00000900 ????????            <1>  ;;; .LT_FT_REGS1: resd 1
   464                              <1> ;// 0900h
   465                              <1> .LT_FT_REGS2:                     resd   1
   465 00000904 ????????            <1>  ;;; .LT_FT_REGS2: resd 1
   466                              <1> ;// 0904h
   467                              <1> .R14_0:                           resq FILL64(0x0D80,0x900)
   467 00000908 <res 1144>          <1>  ;;; .R14_0: resq ( ( ( ( 0x0D80 ) - ( 0x900 ) ) / 8 ) - 1 )
   468                              <1> .LT_SEQ_START:                    resq   1
   468 00000D80 ????????????????    <1>  ;;; .LT_SEQ_START: resq 1
   469                              <1> ;// 0D80h
   470                              <1> .R14_2:                           resq   1
   470 00000D88 ????????????????    <1>  ;;; .R14_2: resq 1
   471                              <1> ;// 0D88h
   472                              <1> .LT_SEQ_DONE:                     resq   1
   472 00000D90 ????????????????    <1>  ;;; .LT_SEQ_DONE: resq 1
   473                              <1> ;// 0D90h
   474                              <1> .LT_INCREMENT_3:                  resq   1
   474 00000D98 ????????????????    <1>  ;;; .LT_INCREMENT_3: resq 1
   475                              <1> ;// 0D98h
   476                              <1> .LT_SCRATCHPAD_7:                 resq   1
   476 00000DA0 ????????????????    <1>  ;;; .LT_SCRATCHPAD_7: resq 1
   477                              <1> ;// 0DA0h
   478                              <1> .LT_INCREMENT_4:                  resq   1
   478 00000DA8 ????????????????    <1>  ;;; .LT_INCREMENT_4: resq 1
   479                              <1> ;// 0DA8h
   480                              <1> .LT_SCRATCHPAD_8:                 resq   1
   480 00000DB0 ????????????????    <1>  ;;; .LT_SCRATCHPAD_8: resq 1
   481                              <1> ;// 0DB0h
   482                              <1> .LT_INCREMENT_5:                  resq   1
   482 00000DB8 ????????????????    <1>  ;;; .LT_INCREMENT_5: resq 1
   483                              <1> ;// 0DB8h
   484                              <1> .LT_SCRATCHPAD_9:                 resq   1
   484 00000DC0 ????????????????    <1>  ;;; .LT_SCRATCHPAD_9: resq 1
   485                              <1> ;// 0DC0h
   486                              <1> .LT_INCREMENT_6:                  resq   1
   486 00000DC8 ????????????????    <1>  ;;; .LT_INCREMENT_6: resq 1
   487                              <1> ;// 0DC8h
   488                              <1> .LT_SCRATCHPAD_10:                resq   1
   488 00000DD0 ????????????????    <1>  ;;; .LT_SCRATCHPAD_10: resq 1
   489                              <1> ;// 0DD0h
   490                              <1> .LT_INCREMENT_7:                  resq   1
   490 00000DD8 ????????????????    <1>  ;;; .LT_INCREMENT_7: resq 1
   491                              <1> ;// 0DD8h
   492                              <1> .LT_SCRATCHPAD_11:                resq   1
   492 00000DE0 ????????????????    <1>  ;;; .LT_SCRATCHPAD_11: resq 1
   493                              <1> ;// 0DE0h
   494                              <1> .LT_INCREMENT_8:                  resq   1
   494 00000DE8 ????????????????    <1>  ;;; .LT_INCREMENT_8: resq 1
   495                              <1> ;// 0DE8h
   496                              <1> .LT_SCRATCHPAD_12:                resq   1
   496 00000DF0 ????????????????    <1>  ;;; .LT_SCRATCHPAD_12: resq 1
   497                              <1> ;// 0DF0h
   498                              <1> endstruc
   498                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; TXT_size equ ($-TXT)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   499                              <1> 
   500                              <1> ;MLE_JOIN STRUCTURE
   501                              <1> 
   502                              <1> struc MLE_JOIN
   502                              <2>  ;;; [macro] struc {MLE_JOIN},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::4] %$strucname MLE_JOIN
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; MLE_JOIN:
   503                              <1> .GdtLimit:                        resd 1
   503 00000000 ????????            <1>  ;;; .GdtLimit: resd 1
   504                              <1> .GdtBase:                         resd 1
   504 00000004 ????????            <1>  ;;; .GdtBase: resd 1
   505                              <1> .SegSel:                          resd 1
   505 00000008 ????????            <1>  ;;; .SegSel: resd 1
   506                              <1> .EntryPoint:                      resd 1
   506 0000000C ????????            <1>  ;;; .EntryPoint: resd 1
   507                              <1> endstruc
   507                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; MLE_JOIN_size equ ($-MLE_JOIN)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   508                              <1> 
   509                              <1> ;IDT64GATE STRUCTURE
   510                              <1> 
   511                              <1> struc IDT64GATE
   511                              <2>  ;;; [macro] struc {IDT64GATE},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::7] %$strucname IDT64GATE
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; IDT64GATE:
   512                              <1> .Off31_16_Attr_Sel_Off15_0:       resq   1
   512 00000000 ????????????????    <1>  ;;; .Off31_16_Attr_Sel_Off15_0: resq 1
   513                              <1> .Res_Off63_32:                    resq   1
   513 00000008 ????????????????    <1>  ;;; .Res_Off63_32: resq 1
   514                              <1> endstruc
   514                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; IDT64GATE_size equ ($-IDT64GATE)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   515                              <1> 
   516                              <1> ;COM_DATA STRUCTURE
   517                              <1> 
   518                              <1> struc COM_DATA
   518                              <2>  ;;; [macro] struc {COM_DATA},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::10] %$strucname COM_DATA
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; COM_DATA:
   519                              <1> .Data64Start:             resd 1 ;		      // Offset of 64-bit data start (and Code32End)
   519 00000000 ????????            <1>  ;;; .Data64Start: resd 1
   520                              <1> .Code64Start:             resd 1 ;            // Offset of 64-bit code start
   520 00000004 ????????            <1>  ;;; .Code64Start: resd 1
   521                              <1> .Code64End:               resd 1 ;            // Offset of 64-bit code end
   521 00000008 ????????            <1>  ;;; .Code64End: resd 1
   522                              <1> .Code64Entry:             resd 1 ;            // Offset of 64-bit code entry point
   522 0000000C ????????            <1>  ;;; .Code64Entry: resd 1
   523                              <1> .StkStart:                resd 1 ;            // Offset of stack start
   523 00000010 ????????            <1>  ;;; .StkStart: resd 1
   524                              <1> .Code32Start:             resd 1 ;            // Offset of code segment start.
   524 00000014 ????????            <1>  ;;; .Code32Start: resd 1
   525                              <1> endstruc
   525                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; COM_DATA_size equ ($-COM_DATA)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   526                              <1> 
   527                              <1> ;BIOSAC_COM64_DATA STRUCTURE
   528                              <1> 
   529                              <1> struc BIOSAC_COM64_DATA
   529                              <2>  ;;; [macro] struc {BIOSAC_COM64_DATA},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::13] %$strucname BIOSAC_COM64_DATA
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; BIOSAC_COM64_DATA:
   530                              <1> .Tolud:                   resq   1
   530 00000000 ????????????????    <1>  ;;; .Tolud: resq 1
   531                              <1> .Touud:                   resq   1
   531 00000008 ????????????????    <1>  ;;; .Touud: resq 1
   532                              <1> .AcmBase:                 resd   1
   532 00000010 ????????            <1>  ;;; .AcmBase: resd 1
   533                              <1> .AcmSize:                 resd   1
   533 00000014 ????????            <1>  ;;; .AcmSize: resd 1
   534                              <1> .PdptBase:                resd   1
   534 00000018 ????????            <1>  ;;; .PdptBase: resd 1
   535                              <1> .error64:                 resd   1
   535 0000001C ????????            <1>  ;;; .error64: resd 1
   536                              <1> .Pattern:                 resq YMM_REG_QWORDS
   536 00000020 <res 32>            <1>  ;;; .Pattern: resq 4
   537                              <1> .StrideSize               resd   1
   537 00000040 ????????            <1>  ;;; .StrideSize resd 1
   538                              <1> .Reserved                 resd   1
   538 00000044 ????????            <1>  ;;; .Reserved resd 1
   539                              <1> .shadow_stack_vesp:       resq   1
   539 00000048 ????????????????    <1>  ;;; .shadow_stack_vesp: resq 1
   540                              <1> endstruc
   540                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; BIOSAC_COM64_DATA_size equ ($-BIOSAC_COM64_DATA)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   541                              <1> 
   542                              <1> ;When updating below structure, make sure to update COM64_DATA structure in 
   543                              <1> ;common64.h. If they are not in sync, random sinit failures may be 
   544                              <1> ;seen during resume flows
   545                              <1> 
   546                              <1> ;COM64_DATA STRUCTURE
   547                              <1> 
   548                              <1> struc COM64_DATA
   548                              <2>  ;;; [macro] struc {COM64_DATA},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::16] %$strucname COM64_DATA
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; COM64_DATA:
   549                              <1> 
   550                              <1> .Rc6Mem:                  resq   1
   550 00000000 ????????????????    <1>  ;;; .Rc6Mem: resq 1
   551                              <1> .MediaRc6Mem              resq   1
   551 00000008 ????????????????    <1>  ;;; .MediaRc6Mem resq 1
   552                              <1> .Mdrb:                    resq   1
   552 00000010 ????????????????    <1>  ;;; .Mdrb: resq 1
   553                              <1> .Touud:                   resq   1
   553 00000018 ????????????????    <1>  ;;; .Touud: resq 1
   554                              <1> .Tolud:                   resq   1
   554 00000020 ????????????????    <1>  ;;; .Tolud: resq 1
   555                              <1> .Bgsm:                    resq   1
   555 00000028 ????????????????    <1>  ;;; .Bgsm: resq 1
   556                              <1> .Bdsm:                    resq   1
   556 00000030 ????????????????    <1>  ;;; .Bdsm: resq 1
   557                              <1> .Ggc:                     resq   1
   557 00000038 ????????????????    <1>  ;;; .Ggc: resq 1
   558                              <1> .TsegMb:                  resq   1
   558 00000040 ????????????????    <1>  ;;; .TsegMb: resq 1
   559                              <1> .Dpr:                     resq   1
   559 00000048 ????????????????    <1>  ;;; .Dpr: resq 1
   560                              <1> .Pavpc:                   resq   1
   560 00000050 ????????????????    <1>  ;;; .Pavpc: resq 1
   561                              <1> .PavpcDE                  resq   1
   561 00000058 ????????????????    <1>  ;;; .PavpcDE resq 1
   562                              <1> .PrmrrBase:               resq   1
   562 00000060 ????????????????    <1>  ;;; .PrmrrBase: resq 1
   563                              <1> .PrmrrMask:               resq   1
   563 00000068 ????????????????    <1>  ;;; .PrmrrMask: resq 1
   564                              <1> .Mpmen:                   resd   1
   564 00000070 ????????            <1>  ;;; .Mpmen: resd 1
   565                              <1> .PmrLoBase:               resd   1
   565 00000074 ????????            <1>  ;;; .PmrLoBase: resd 1
   566                              <1> .PmrLoLimit:              resd   1
   566 00000078 ????????            <1>  ;;; .PmrLoLimit: resd 1
   567                              <1> .PmrHiBase:               resd   1
   567 0000007C ????????            <1>  ;;; .PmrHiBase: resd 1
   568                              <1> .PmrHiLimit:              resd   1
   568 00000080 ????????            <1>  ;;; .PmrHiLimit: resd 1
   569                              <1> .GunitCtrl:               resd   1
   569 00000084 ????????            <1>  ;;; .GunitCtrl: resd 1
   570                              <1> .GucWopcmOffset:          resd   1
   570 00000088 ????????            <1>  ;;; .GucWopcmOffset: resd 1
   571                              <1> .GucWopcmSize:            resd   1
   571 0000008C ????????            <1>  ;;; .GucWopcmSize: resd 1
   572                              <1> .GucMediaWopcmOffset:     resd   1
   572 00000090 ????????            <1>  ;;; .GucMediaWopcmOffset: resd 1
   573                              <1> .GucMediaWopcmSize:       resd   1
   573 00000094 ????????            <1>  ;;; .GucMediaWopcmSize: resd 1
   574                              <1> .BtPol:                   resq   1
   574 00000098 ????????????????    <1>  ;;; .BtPol: resq 1
   575                              <1> .BpKey0:                  resq   1
   575 000000A0 ????????????????    <1>  ;;; .BpKey0: resq 1
   576                              <1> .BpKey1:                  resq   1
   576 000000A8 ????????????????    <1>  ;;; .BpKey1: resq 1
   577                              <1> .BpKey2:                  resq   1
   577 000000B0 ????????????????    <1>  ;;; .BpKey2: resq 1
   578                              <1> .BpKey3:                  resq   1
   578 000000B8 ????????????????    <1>  ;;; .BpKey3: resq 1
   579                              <1> .BpKey4:                  resq   1
   579 000000C0 ????????????????    <1>  ;;; .BpKey4: resq 1
   580                              <1> .BpKey5:                  resq   1
   580 000000C8 ????????????????    <1>  ;;; .BpKey5: resq 1
   581                              <1> .Pml4PageDirectoryBase:   resd   1
   581 000000D0 ????????            <1>  ;;; .Pml4PageDirectoryBase: resd 1
   582                              <1> .error64:                 resd   1
   582 000000D4 ????????            <1>  ;;; .error64: resd 1
   583                              <1> .ReqType:                 resb   1
   583 000000D8 ??                  <1>  ;;; .ReqType: resb 1
   584                              <1> .shadow_stack_vesp:       resq   1
   584 000000D9 ????????????????    <1>  ;;; .shadow_stack_vesp: resq 1
   585                              <1> endstruc
   585                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; COM64_DATA_size equ ($-COM64_DATA)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   586                              <1> 
   587                              <1> %if 0
   588                              <1> ;COM64_DATA STRUCTURE
   589                              <1> struc SEAMLDR_COM64_DATA
   590                              <1> 
   591                              <1> .OriginalR8:                  resq   1
   592                              <1> .OriginalR9:	              resq   1
   593                              <1> .OriginalR10:                 resq   1
   594                              <1> .OriginalR11:                 resq   1
   595                              <1> .OriginalR12:                 resq   1
   596                              <1> .OriginalCR3:                 resq   1
   597                              <1> .OriginalCR4:                 resd   1
   598                              <1> .OriginalES:                  resw   1
   599                              <1> .OriginalFS:                  resw   1
   600                              <1> .OriginalGS:                  resw   1
   601                              <1> .OriginalSS:                  resw   1
   602                              <1> .OriginalECX                  resd   1
   603                              <1> .OriginalIDTRLimit:           resw   1
   604                              <1> .NewIDTR:               	  resb   10
   605                              <1> .OriginalGdtr:                resb   10
   606                              <1> .ResumeRip:               	  resq   1
   607                              <1> .PtCtxPtr:                    resq   1
   608                              <1> .RetVal:                      resq   1
   609                              <1> .HeaderStart:                 resq   1
   610                              <1> .PseamldrSize:                resd   1
   611                              <1> .PseamldrOffset:              resq   1
   612                              <1> .PseamldrConstsOffset:     	  resq   1
   613                              <1> .NewGdtr:     				  resb   10
   614                              <1> endstruc
   615                              <1> %endif
   616                              <1> 
   617                              <1> 
   618                              <1> ;GDT32DESCRIPTOR STRUCTURE
   619                              <1> 
   620                              <1> struc GDT32DESCRIPTOR
   620                              <2>  ;;; [macro] struc {GDT32DESCRIPTOR},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::19] %$strucname GDT32DESCRIPTOR
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; GDT32DESCRIPTOR:
   621                              <1> 
   622                              <1> .Limit15_0:               resw    1
   622 00000000 ????                <1>  ;;; .Limit15_0: resw 1
   623                              <1> .Base23_0:                resb    3
   623 00000002 ??????              <1>  ;;; .Base23_0: resb 3
   624                              <1> .Attr:                    resb    1
   624 00000005 ??                  <1>  ;;; .Attr: resb 1
   625                              <1> .Attr_Limit19_16:         resb    1
   625 00000006 ??                  <1>  ;;; .Attr_Limit19_16: resb 1
   626                              <1> .Base31_24:               resb    1
   626 00000007 ??                  <1>  ;;; .Base31_24: resb 1
   627                              <1> 
   628                              <1> endstruc
   628                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; GDT32DESCRIPTOR_size equ ($-GDT32DESCRIPTOR)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   629                              <1> 
   630                              <1> 
   631                              <1> ;GDT STRUCTURE
   632                              <1> 
   633                              <1> struc GDT
   633                              <2>  ;;; [macro] struc {GDT},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::22] %$strucname GDT
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; GDT:
   634                              <1> 
   635                              <1> .NullDescriptor: resb GDT32DESCRIPTOR_size
   635 00000000 ????????????????    <1>  ;;; .NullDescriptor: resb GDT32DESCRIPTOR_size
   636                              <1> .AcmCodeDescriptor: resb GDT32DESCRIPTOR_size
   636 00000008 ????????????????    <1>  ;;; .AcmCodeDescriptor: resb GDT32DESCRIPTOR_size
   637                              <1> .AcmDataDescriptor: resb GDT32DESCRIPTOR_size
   637 00000010 ????????????????    <1>  ;;; .AcmDataDescriptor: resb GDT32DESCRIPTOR_size
   638                              <1> .AcmCode64Descriptor:  resb GDT32DESCRIPTOR_size
   638 00000018 ????????????????    <1>  ;;; .AcmCode64Descriptor: resb GDT32DESCRIPTOR_size
   639                              <1> 
   640                              <1> endstruc
   640                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; GDT_size equ ($-GDT)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   641                              <1> 
   642                              <1> ;RANGE STRUCTURE
   643                              <1> 
   644                              <1> struc RANGE
   644                              <2>  ;;; [macro] struc {RANGE},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::25] %$strucname RANGE
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; RANGE:
   645                              <1> 
   646                              <1> .labl:                    resq   1
   646 00000000 ????????????????    <1>  ;;; .labl: resq 1
   647                              <1> .attr:                    resw   1
   647 00000008 ????                <1>  ;;; .attr: resw 1
   648                              <1> .flags:                   resw   1
   648 0000000A ????                <1>  ;;; .flags: resw 1
   649                              <1> .len:                     resq   1
   649 0000000C ????????????????    <1>  ;;; .len: resq 1
   650                              <1> .base:                    resq   1
   650 00000014 ????????????????    <1>  ;;; .base: resq 1
   651                              <1> .top:                     resq   1
   651 0000001C ????????????????    <1>  ;;; .top: resq 1
   652                              <1> .almtMask:                resq   1
   652 00000024 ????????????????    <1>  ;;; .almtMask: resq 1
   653                              <1> 
   654                              <1> endstruc
   654                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; RANGE_size equ ($-RANGE)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   655                              <1> 
   656                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   657                              <1> ;                       DUMMYS FOR ACM HEADER
   658                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   659                              <1> 
   660                              <1> struc   Dummy_1
   660                              <2>  ;;; [macro] struc {Dummy_1},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::28] %$strucname Dummy_1
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; Dummy_1:
   661                              <1>         .HeaderLen               resd   1
   661 00000000 ????????            <1>  ;;;  .HeaderLen resd 1
   662                              <1>         .HeaderVersion           resd   1
   662 00000004 ????????            <1>  ;;;  .HeaderVersion resd 1
   663                              <1> endstruc
   663                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; Dummy_1_size equ ($-Dummy_1)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   664                              <1> 
   665                              <1> struc   Dummy_2
   665                              <2>  ;;; [macro] struc {Dummy_2},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::31] %$strucname Dummy_2
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; Dummy_2:
   666                              <1>         .ModuleVendor            resd   1
   666 00000000 ????????            <1>  ;;;  .ModuleVendor resd 1
   667                              <1>         .Revision                resd   1
   667 00000004 ????????            <1>  ;;;  .Revision resd 1
   668                              <1>         .Sizeb                   resd   1
   668 00000008 ????????            <1>  ;;;  .Sizeb resd 1
   669                              <1> endstruc
   669                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; Dummy_2_size equ ($-Dummy_2)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   670                              <1> 
   671                              <1> struc   Dummy_3
   671                              <2>  ;;; [macro] struc {Dummy_3},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::34] %$strucname Dummy_3
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; Dummy_3:
   672                              <1>         .CodeControl             resd   1
   672 00000000 ????????            <1>  ;;;  .CodeControl resd 1
   673                              <1>         .ErrorEntryPoint         resd   1
   673 00000004 ????????            <1>  ;;;  .ErrorEntryPoint resd 1
   674                              <1> endstruc
   674                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; Dummy_3_size equ ($-Dummy_3)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   675                              <1> 
   676                              <1> struc   Dummy_4
   676                              <2>  ;;; [macro] struc {Dummy_4},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::37] %$strucname Dummy_4
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; Dummy_4:
   677                              <1>         .Reserved2               resb   64
   677 00000000 <res 64>            <1>  ;;;  .Reserved2 resb 64
   678                              <1>         .KeySize                 resd   1
   678 00000040 ????????            <1>  ;;;  .KeySize resd 1
   679                              <1>         .ScratchSize             resd   1
   679 00000044 ????????            <1>  ;;;  .ScratchSize resd 1
   680                              <1>         .RSA2048PubKey           resb   256
   680 00000048 <res 256>           <1>  ;;;  .RSA2048PubKey resb 256
   681                              <1>         .PubExp                  resd   1
   681 00000148 ????????            <1>  ;;;  .PubExp resd 1
   682                              <1>         .RSA2048Sig              resb   256
   682 0000014C <res 256>           <1>  ;;;  .RSA2048Sig resb 256
   683                              <1>         .scratch                 resb   572
   683 0000024C <res 572>           <1>  ;;;  .scratch resb 572
   684                              <1> endstruc
   684                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; Dummy_4_size equ ($-Dummy_4)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   685                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   686                              <1> 
   687                              <1> 
   688                              <1> 
   689                              <1> ;ACM_HEADER STRUCTURE
   690                              <1> struc ACM_HEADER_0
   690                              <2>  ;;; [macro] struc {ACM_HEADER_0},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::40] %$strucname ACM_HEADER_0
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; ACM_HEADER_0:
   691                              <1> 
   692                              <1> .ModuleType                             resw    1
   692 00000000 ????                <1>  ;;; .ModuleType resw 1
   693                              <1> .ModuleSubType                          resw    1
   693 00000002 ????                <1>  ;;; .ModuleSubType resw 1
   694                              <1> .Dummy_1_var                            resb    Dummy_1_size
   694 00000004 ????????????????    <1>  ;;; .Dummy_1_var resb Dummy_1_size
   695                              <1> .ModuleID                               resw    1
   695 0000000C ????                <1>  ;;; .ModuleID resw 1
   696                              <1> .ModuleFlags                            resw    1
   696 0000000E ????                <1>  ;;; .ModuleFlags resw 1
   697                              <1> .Dummy_2_var                            resb    Dummy_2_size
   697 00000010 <res 12>            <1>  ;;; .Dummy_2_var resb Dummy_2_size
   698                              <1> .AcmSvn                                 resw    1
   698 0000001C ????                <1>  ;;; .AcmSvn resw 1
   699                              <1> .SeSvn                                  resw    1
   699 0000001E ????                <1>  ;;; .SeSvn resw 1
   700                              <1> .Dummy_3_var                            resb    Dummy_3_size
   700 00000020 ????????????????    <1>  ;;; .Dummy_3_var resb Dummy_3_size
   701                              <1> .GDTSize                                resd    1
   701 00000028 ????????            <1>  ;;; .GDTSize resd 1
   702                              <1> .GDTBasePtr                             resd    1
   702 0000002C ????????            <1>  ;;; .GDTBasePtr resd 1
   703                              <1> .SegSel                                 resd    1
   703 00000030 ????????            <1>  ;;; .SegSel resd 1
   704                              <1> .EntryPoint                             resd    1
   704 00000034 ????????            <1>  ;;; .EntryPoint resd 1
   705                              <1> .Dummy_4_var                            resb    Dummy_4_size
   705 00000038 <res 1160>          <1>  ;;; .Dummy_4_var resb Dummy_4_size
   706                              <1> 
   707                              <1> endstruc
   707                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; ACM_HEADER_0_size equ ($-ACM_HEADER_0)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   708                              <1> ;IDT32GATE STRUCTURE
   709                              <1> 
   710                              <1> struc IDT32GATE
   710                              <2>  ;;; [macro] struc {IDT32GATE},{0}
     0                              <2> %push
     0                              <2> %define %$strucname %1
     0                              <2>  ;;; %define [::43] %$strucname IDT32GATE
     0                              <2> [absolute %2]
     0                              <2>  ;;; [absolute 0]
     0                              <2> %$strucname:
     0                              <2>  ;;; IDT32GATE:
   711                              <1> 
   712                              <1> .Off15_0:                 resw    1
   712 00000000 ????                <1>  ;;; .Off15_0: resw 1
   713                              <1> .Sel:                     resw    1
   713 00000002 ????                <1>  ;;; .Sel: resw 1
   714                              <1> .Attr:                    resw    1
   714 00000004 ????                <1>  ;;; .Attr: resw 1
   715                              <1> .Off31_16:                resw    1
   715 00000006 ????                <1>  ;;; .Off31_16: resw 1
   716                              <1> 
   717                              <1> endstruc
   717                              <2>  ;;; [macro] endstruc
     0                              <2> %$strucname_size equ ($-%$strucname)
     0                              <2>  ;;; IDT32GATE_size equ ($-IDT32GATE)
     0                              <2> %pop
     0                              <2> __?SECT?__
     0                              <2>  ;;; [section .text]
   718                              <1> 
   719                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   720                              <1> ;                       FUNCTION PROTOTYPES
   721                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   722                              <1> 
   723                              <1> extern fillMemory
   723                              <2>  ;;; [macro] extern {fillMemory}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern fillMemory]
     0                              <3> %rotate 1
   724                              <1> extern CoreBuildPml4TablesShort
   724                              <2>  ;;; [macro] extern {CoreBuildPml4TablesShort}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern CoreBuildPml4TablesShort]
     0                              <3> %rotate 1
   725                              <1> extern AcmEntryPoint
   725                              <2>  ;;; [macro] extern {AcmEntryPoint}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern AcmEntryPoint]
     0                              <3> %rotate 1
   726                              <1> extern CoreBuildPml4Tables
   726                              <2>  ;;; [macro] extern {CoreBuildPml4Tables}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern CoreBuildPml4Tables]
     0                              <3> %rotate 1
   727                              <1> extern copyMemory
   727                              <2>  ;;; [macro] extern {copyMemory}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern copyMemory]
     0                              <3> %rotate 1
   728                              <1> extern __Wait1ms
   728                              <2>  ;;; [macro] extern {__Wait1ms}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern __Wait1ms]
     0                              <3> %rotate 1
   729                              <1> extern INTErrorHandler
   729                              <2>  ;;; [macro] extern {INTErrorHandler}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern INTErrorHandler]
     0                              <3> %rotate 1
   730                              <1> extern Update_CRx
   730                              <2>  ;;; [macro] extern {Update_CRx}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern Update_CRx]
     0                              <3> %rotate 1
   731                              <1> extern SgxProtection
   731                              <2>  ;;; [macro] extern {SgxProtection}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern SgxProtection]
     0                              <3> %rotate 1
   732                              <1> extern commonAcmEntryPoint
   732                              <2>  ;;; [macro] extern {commonAcmEntryPoint}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern commonAcmEntryPoint]
     0                              <3> %rotate 1
   733                              <1> 
   734                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   735                              <1> ;                       EXTERN VARIABLES
   736                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   737                              <1> 
   738                              <1> extern BiosacCom64Data
   738                              <2>  ;;; [macro] extern {BiosacCom64Data}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern BiosacCom64Data]
     0                              <3> %rotate 1
   739                              <1> extern Com64Data
   739                              <2>  ;;; [macro] extern {Com64Data}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern Com64Data]
     0                              <3> %rotate 1
   740                              <1> extern AcmBase
   740                              <2>  ;;; [macro] extern {AcmBase}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern AcmBase]
     0                              <3> %rotate 1
   741                              <1> extern stackStart
   741                              <2>  ;;; [macro] extern {stackStart}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern stackStart]
     0                              <3> %rotate 1
   742                              <1> extern GdtBasePtr
   742                              <2>  ;;; [macro] extern {GdtBasePtr}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern GdtBasePtr]
     0                              <3> %rotate 1
   743                              <1> extern monitorField
   743                              <2>  ;;; [macro] extern {monitorField}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern monitorField]
     0                              <3> %rotate 1
   744                              <1> extern ilpSmrrBase
   744                              <2>  ;;; [macro] extern {ilpSmrrBase}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern ilpSmrrBase]
     0                              <3> %rotate 1
   745                              <1> extern ilpSmrrMask
   745                              <2>  ;;; [macro] extern {ilpSmrrMask}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern ilpSmrrMask]
     0                              <3> %rotate 1
   746                              <1> extern ilpSmrr2Base
   746                              <2>  ;;; [macro] extern {ilpSmrr2Base}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern ilpSmrr2Base]
     0                              <3> %rotate 1
   747                              <1> extern ilpSmrr2Mask
   747                              <2>  ;;; [macro] extern {ilpSmrr2Mask}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern ilpSmrr2Mask]
     0                              <3> %rotate 1
   748                              <1> extern ilpSmrr2Support
   748                              <2>  ;;; [macro] extern {ilpSmrr2Support}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern ilpSmrr2Support]
     0                              <3> %rotate 1
   749                              <1> extern LocalitiesToCheck
   749                              <2>  ;;; [macro] extern {LocalitiesToCheck}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern LocalitiesToCheck]
     0                              <3> %rotate 1
   750                              <1> extern BspMcuVer
   750                              <2>  ;;; [macro] extern {BspMcuVer}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern BspMcuVer]
     0                              <3> %rotate 1
   751                              <1> extern MlePageTabPhy
   751                              <2>  ;;; [macro] extern {MlePageTabPhy}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern MlePageTabPhy]
     0                              <3> %rotate 1
   752                              <1> extern MleEntryPointPhy
   752                              <2>  ;;; [macro] extern {MleEntryPointPhy}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern MleEntryPointPhy]
     0                              <3> %rotate 1
   753                              <1> extern CodeSegmentStart
   753                              <2>  ;;; [macro] extern {CodeSegmentStart}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern CodeSegmentStart]
     0                              <3> %rotate 1
   754                              <1> extern AcmSize
   754                              <2>  ;;; [macro] extern {AcmSize}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern AcmSize]
     0                              <3> %rotate 1
   755                              <1> extern AcmTop
   755                              <2>  ;;; [macro] extern {AcmTop}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern AcmTop]
     0                              <3> %rotate 1
   756                              <1> extern OriginalIDTR
   756                              <2>  ;;; [macro] extern {OriginalIDTR}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalIDTR]
     0                              <3> %rotate 1
   757                              <1> extern OriginalEIP
   757                              <2>  ;;; [macro] extern {OriginalEIP}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalEIP]
     0                              <3> %rotate 1
   758                              <1> extern OriginalEAX
   758                              <2>  ;;; [macro] extern {OriginalEAX}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalEAX]
     0                              <3> %rotate 1
   759                              <1> extern OriginalESI
   759                              <2>  ;;; [macro] extern {OriginalESI}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalESI]
     0                              <3> %rotate 1
   760                              <1> extern OriginalEDI
   760                              <2>  ;;; [macro] extern {OriginalEDI}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalEDI]
     0                              <3> %rotate 1
   761                              <1> extern OriginalECX
   761                              <2>  ;;; [macro] extern {OriginalECX}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalECX]
     0                              <3> %rotate 1
   762                              <1> extern OriginalEDX
   762                              <2>  ;;; [macro] extern {OriginalEDX}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalEDX]
     0                              <3> %rotate 1
   763                              <1> extern OriginalCR4
   763                              <2>  ;;; [macro] extern {OriginalCR4}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalCR4]
     0                              <3> %rotate 1
   764                              <1> extern OriginalES
   764                              <2>  ;;; [macro] extern {OriginalES}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalES]
     0                              <3> %rotate 1
   765                              <1> extern OriginalFS
   765                              <2>  ;;; [macro] extern {OriginalFS}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalFS]
     0                              <3> %rotate 1
   766                              <1> extern OriginalGS
   766                              <2>  ;;; [macro] extern {OriginalGS}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalGS]
     0                              <3> %rotate 1
   767                              <1> extern OriginalSS
   767                              <2>  ;;; [macro] extern {OriginalSS}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalSS]
     0                              <3> %rotate 1
   768                              <1> extern SeamldrCom64Data
   768                              <2>  ;;; [macro] extern {SeamldrCom64Data}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern SeamldrCom64Data]
     0                              <3> %rotate 1
   769                              <1> extern OriginalIDTRLimit
   769                              <2>  ;;; [macro] extern {OriginalIDTRLimit}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern OriginalIDTRLimit]
     0                              <3> %rotate 1
   770                              <1> extern HeaderStart
   770                              <2>  ;;; [macro] extern {HeaderStart}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern HeaderStart]
     0                              <3> %rotate 1
   771                              <1> extern shadow_stack_vesp
   771                              <2>  ;;; [macro] extern {shadow_stack_vesp}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern shadow_stack_vesp]
     0                              <3> %rotate 1
   772                              <1> extern shadow_stack_vesp64
   772                              <2>  ;;; [macro] extern {shadow_stack_vesp64}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern shadow_stack_vesp64]
     0                              <3> %rotate 1
   773                              <1> extern shadow_stack_vesp64_bottom
   773                              <2>  ;;; [macro] extern {shadow_stack_vesp64_bottom}
     0                              <2> %rep %0
     0                              <2> [extern %1]
     0                              <2> %rotate 1
     0                              <2> %endrep
     0                              <3> [extern %1]
     0                              <3>  ;;; [extern shadow_stack_vesp64_bottom]
     0                              <3> %rotate 1
   774                              <1> 
   775                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   776                              <1> ;                       Helper macros
   777                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   778                              <1> 
   779                              <1> 
   780                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   781                              <1> ;            Implementation of if and else Macros
   782                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   783                              <1> 
   784                              <1> %macro IF 1
   785                              <1> 
   786                              <1>         %push IF
   787                              <1>         j%-1  %$ifnot
   788                              <1> 
   789                              <1> %endmacro
   790                              <1> 
   791                              <1> %macro ELSE 0
   792                              <1> 
   793                              <1>   %ifctx IF
   794                              <1>         %repl   else
   795                              <1>         jmp     %$ifend
   796                              <1>         %$ifnot:
   797                              <1>   %else
   798                              <1>         %error  "expected IF before ELSE"
   799                              <1>   %endif
   800                              <1> 
   801                              <1> %endmacro
   802                              <1> 
   803                              <1> %macro ENDIF 0
   804                              <1> 
   805                              <1>   %ifctx IF
   806                              <1>         %$ifnot:
   807                              <1>         %pop
   808                              <1>   %elifctx  else
   809                              <1>         %$ifend:
   810                              <1>         %pop
   811                              <1>   %else
   812                              <1>         %error  "expected IF or ELSE before ENDIF"
   813                              <1>   %endif
   814                              <1> 
   815                              <1> %endmacro
   816                              <1> 
   817                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   818                              <1> ;  Implementation of Repeat Macro
   819                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   820                              <1> 
   821                              <1> %macro REPEAT 0
   822                              <1> 
   823                              <1>     %push   REPEAT
   824                              <1>     %$begin:
   825                              <1> 
   826                              <1> %endmacro
   827                              <1> 
   828                              <1> %macro UNTIL_FOREVER 0
   829                              <1>         jmp    %$begin
   830                              <1> %$break:
   831                              <1>     %pop
   832                              <1> 
   833                              <1> %endmacro
   834                              <1> 
   835                              <1> %macro UNTIL 3
   836                              <1>         cmp %1,%3
   837                              <1>         j%-2    %$begin
   838                              <1> %$break:
   839                              <1>     %pop
   840                              <1> 
   841                              <1> %endmacro
   842                              <1> 
   843                              <1> %macro UNTILCXZ 0
   844                              <1> 
   845                              <1>         loop    %$begin
   846                              <1> %$break:
   847                              <1>     %pop
   848                              <1> 
   849                              <1> %endmacro
   850                              <1> 
   851                              <1> %macro UNTILCXNZ 0
   852                              <1> 
   853                              <1>         loop    %$begin
   854                              <1> %$break:
   855                              <1>     %pop
   856                              <1> 
   857                              <1> %endmacro
   858                              <1> 
   859                              <1> 
   860                              <1> %macro BREAK_IF_EQUAL 2
   861                              <1> 	%ifctx REPEAT
   862                              <1>                 cmp %1,%2
   863                              <1>                 je %$break
   864                              <1> 	%else
   865                              <1> 		%fatal "BREAK_IF must be inside REPEAT"
   866                              <1> 	%endif
   867                              <1> %endmacro
   868                              <1> 
   869                              <1> %macro BREAK_IF_NOTEQUAL 2
   870                              <1> 	%ifctx REPEAT
   871                              <1>                 cmp %1,%2
   872                              <1>                 jne %$break
   873                              <1> 	%else
   874                              <1> 		%fatal "BREAK_IF must be inside REPEAT"
   875                              <1> 	%endif
   876                              <1> %endmacro
   877                              <1> 
   878                              <1> %macro BREAK_IF_ZERO 0
   879                              <1> 	%ifctx REPEAT
   880                              <1>                 je %$break
   881                              <1> 	%else
   882                              <1> 		%fatal "BREAK_IF must be inside REPEAT"
   883                              <1> 	%endif
   884                              <1> %endmacro
   885                              <1> 
   886                              <1> %macro BREAK_IF_NOT_ZERO 0
   887                              <1> 	%ifctx REPEAT
   888                              <1>                 jne %$break
   889                              <1> 	%else
   890                              <1> 		%fatal "BREAK_IF must be inside REPEAT"
   891                              <1> 	%endif
   892                              <1> %endmacro
   893                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   894                              <1> ;  Implementation of MULTIPUSH and MULTIPOP Macro
   895                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   896                              <1> 
   897                              <1> 
   898                              <1> %macro  MULTIPUSH 1-*
   899                              <1> 
   900                              <1>   %rep  %0
   901                              <1>         push    %1
   902                              <1>   %rotate 1
   903                              <1>   %endrep
   904                              <1> 
   905                              <1> %endmacro
   906                              <1> 
   907                              <1> %macro  MULTIPOP 1-*
   908                              <1> 
   909                              <1>   %rep %0
   910                              <1>   %rotate -1
   911                              <1>         pop     %1
   912                              <1>   %endrep
   913                              <1> 
   914                              <1> %endmacro
   915                              <1> 
   916                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   917                              <1> ;  Implementation of PROLOGUE and EPILOGUE  Macro
   918                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   919                              <1> %macro  PROLOGUE 1
   920                              <1>         push    ebp
   921                              <1>         mov     ebp,esp
   922                              <1>         sub     esp,%1
   923                              <1> %endmacro
   924                              <1> 
   925                              <1> %macro  PROLOGUE 0
   926                              <1>         push    ebp
   927                              <1>         mov     ebp,esp
   928                              <1> %endmacro
   929                              <1> 
   930                              <1> %macro  EPILOGUE  0
   931                              <1>         leave
   932                              <1>         ret
   933                              <1> %endmacro
   934                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   935                              <1> ;  Implementation of DEBUG_BREAK_POINT Macro define DEBUG before using
   936                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   937                              <1> 
   938                              <1> %ifdef DEBUG
   939                              <1> 
   940                              <1> %macro DEBUG_BREAK_POINT 0
   941                              <1>         jmp     $
   942                              <1> %endmacro
   943                              <1> 
   944                              <1> %macro PRINT_TO_PORT 1
   945                              <1>         push ax
   946                              <1>         mov ax, %1
   947                              <1>         out PORT80, ax
   948                              <1>         pop ax
   949                              <1> %endmacro
   950                              <1> 
   951                              <1> %else
   952                              <1> %macro DEBUG_BREAK_POINT  0
   953                              <1> %endmacro
   954                              <1> 
   955                              <1> %macro PRINT_TO_PORT 1
   956                              <1> %endmacro
   957                              <1> 
   958                              <1> %endif
   959                              <1> 
   960                              <1> %endif
    18                                  
    19                                  section EDATA32 data write PUBLIC USE32 align=16
    19                              <1>  ;;; [macro] section {EDATA32 data write PUBLIC USE32 align=16}
     0                              <1> %define __?SECT?__ [section %1]
     0                              <1>  ;;; %define __?SECT?__ [section EDATA32 data write PUBLIC USE32 align=16]
     0                              <1> __?SECT?__
     0                              <1>  ;;; [section EDATA32 data write PUBLIC USE32 align=16]
    20                                  shadow_stack_vesp: dq 0
    20 00000000 0000000000000000         ;;; shadow_stack_vesp: dq 0
    21                                  
    22                                  section .text code USE32 align=1
    22                              <1>  ;;; [macro] section {.text code USE32 align=1}
     0                              <1> %define __?SECT?__ [section %1]
     0                              <1>  ;;; %define __?SECT?__ [section .text code USE32 align=1]
     0                              <1> __?SECT?__
     0                              <1>  ;;; [section .text code USE32 align=1]
    23                                  
    24                                  global  _penter
    24                              <1>  ;;; [macro] global {_penter}
     0                              <1> %rep %0
     0                              <1> [global %1]
     0                              <1> %rotate 1
     0                              <1> %endrep
     0                              <2> [global %1]
     0                              <2>  ;;; [global _penter]
     0                              <2> %rotate 1
    25                                  _penter:
    25                                   ;;; _penter:
    26                                          push eax ; save tmp
    26 00000000 50                       ;;;  push eax
    27                                          push ebx
    27 00000001 53                       ;;;  push ebx
    28                                  
    29                                          ; push RA to shadow stack
    30                                          mov eax, [esp+12]   ; get RA
    30 00000002 8B44240C                 ;;;  mov eax, [esp+12]
    31                                          mov ebx, DWORD [shadow_stack_vesp]
    31 00000006 8B1D[00000000]           ;;;  mov ebx, DWORD [shadow_stack_vesp]
    32                                  
    33                                          mov [ebx], eax      ; "push" RA
    33 0000000C 8903                     ;;;  mov [ebx], eax
    34                                          add DWORD [shadow_stack_vesp], 4
    34 0000000E 8305[00000000]04         ;;;  add DWORD [shadow_stack_vesp], 4
    35                                  
    36                                          pop ebx
    36 00000015 5B                       ;;;  pop ebx
    37                                          pop eax
    37 00000016 58                       ;;;  pop eax
    38                                          ret
    38 00000017 C3                       ;;;  ret
    39                                  
    40                                  global  _pexit
    40                              <1>  ;;; [macro] global {_pexit}
     0                              <1> %rep %0
     0                              <1> [global %1]
     0                              <1> %rotate 1
     0                              <1> %endrep
     0                              <2> [global %1]
     0                              <2>  ;;; [global _pexit]
     0                              <2> %rotate 1
    41                                  _pexit:
    41                                   ;;; _pexit:
    42                                          push eax ; make tmp
    42 00000018 50                       ;;;  push eax
    43                                          push ebx
    43 00000019 53                       ;;;  push ebx
    44                                  
    45                                          ; pop from shadow stack
    46                                          mov ebx, DWORD [shadow_stack_vesp]
    46 0000001A 8B1D[00000000]           ;;;  mov ebx, DWORD [shadow_stack_vesp]
    47                                          sub ebx, 4
    47 00000020 83EB04                   ;;;  sub ebx, 4
    48                                          mov eax, [ebx]
    48 00000023 8B03                     ;;;  mov eax, [ebx]
    49                                          mov DWORD [shadow_stack_vesp], ebx
    49 00000025 891D[00000000]           ;;;  mov DWORD [shadow_stack_vesp], ebx
    50                                  
    51                                          ; compare shadow RA to callee RA
    52                                          cmp eax, DWORD [esp + 12]
    52 0000002B 3B44240C                 ;;;  cmp eax, DWORD [esp + 12]
    53                                          jnz error
    53 0000002F 7503                     ;;;  jnz error
    54                                  
    55                                      skip_check:
    55                                   ;;;  skip_check:
    56                                          pop ebx ; restore tmp
    56 00000031 5B                       ;;;  pop ebx
    57                                          pop eax
    57 00000032 58                       ;;;  pop eax
    58                                          ret
    58 00000033 C3                       ;;;  ret
    59                                  
    60                                      error:
    60                                   ;;;  error:
    61                                  
    62                                          %ifidni ACM_TYPE,AC_BIOSAC
    63                                              %assign SHADOW_STACK_ERROR  ( CRASH_CODE_VALID + CRASH_CODE_SW_GENERATED + AC_BIOSAC + (ERR_SHADOW_STACK << CR_Major_cr_position) + (CLASS_INTERNAL_ERRORS << CR_Class_cr_position) )
    63                                   ;;; %define SHADOW_STACK_ERROR 3221227008
    64                                          %endif
    65                                          %ifidni ACM_TYPE,AC_SINIT
    66                                              %assign SHADOW_STACK_ERROR  ( CRASH_CODE_VALID + CRASH_CODE_SW_GENERATED + AC_SINIT + (ERR_SHADOW_STACK << CR_Major_cr_position) + (CLASS_INTERNAL_ERRORS << CR_Class_cr_position) )
    67                                          %endif
    68                                  
    69                                          update_crash_register:
    69                                   ;;;  update_crash_register:
    70                                              mov     esi, LT_PRV_BASE+TXT.LT_CRASH
    70 00000034 BE3000D2FE               ;;;  mov esi, 0xFED20000+TXT.LT_CRASH
    71                                              mov     [esi], DWORD SHADOW_STACK_ERROR
    71 00000039 C706000600C0             ;;;  mov [esi], DWORD 3221227008
    72                                  
    73                                          ltReset:
    73                                   ;;;  ltReset:
    74                                              mov   ecx, 1000
    74 0000003F B9E8030000               ;;;  mov ecx, 1000
    75                                              mov   esi, LT_PRV_BASE+TXT.LT_CMD_SYS_RESET
    75 00000044 BE3800D2FE               ;;;  mov esi, 0xFED20000+TXT.LT_CMD_SYS_RESET
    76                                  
    77                                              REPEAT
    77                              <1>  ;;; [macro] REPEAT
   822                              <1> 
   823                              <1>  %push REPEAT
   824                              <1>  %$begin:
   824                              <1>  ;;;  ..@96.begin:
   825                              <1> 
    78                                                      mov   DWORD [esi], 0
    78 00000049 C70600000000             ;;;  mov DWORD [esi], 0
    79                                                      mov   eax, [esi]              ; Read it back
    79 0000004F 8B06                     ;;;  mov eax, [esi]
    80                                                      pause
    80 00000051 F390                     ;;;  pause
    81                                              UNTILCXZ
    81                              <1>  ;;; [macro] UNTILCXZ
   844                              <1> 
   845                              <1>  loop %$begin
   845 00000053 E2F4                <1>  ;;;  loop ..@96.begin
   846                              <1> %$break:
   846                              <1>  ;;; ..@96.break:
   847                              <1>  %pop
   848                              <1> 
    82                                  
    83                                          deadLoop:
    83                                   ;;;  deadLoop:
    84                                              hlt
    84 00000055 F4                       ;;;  hlt
    85                                              jmp   deadLoop
    85 00000056 EBFD                     ;;;  jmp deadLoop
