; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	fillMemory
EXTRN	memcpy:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$coreFillMemory DD imagerel coreFillMemory
	DD	imagerel coreFillMemory+64
	DD	imagerel $unwind$coreFillMemory
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$coreFillMemory DD 020901H
	DD	070053209H
xdata	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\memfill64.c
;	COMDAT coreFillMemory
_TEXT	SEGMENT
start_addr$ = 48
val$ = 56
len$ = 64
coreFillMemory PROC					; COMDAT

; 36   : {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	57		 push	 rdi
  00005	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 37   :   UINT32 i = 0;
; 38   : 
; 39   :   for (i = 0; i < len / 4; i++) {

  00009	41 8b c0	 mov	 eax, r8d
  0000c	4c 8b d1	 mov	 r10, rcx
  0000f	c1 e8 02	 shr	 eax, 2
  00012	85 c0		 test	 eax, eax
  00014	74 11		 je	 SHORT $LN13@coreFillMe
  00016	44 8b c8	 mov	 r9d, eax
  00019	48 8b f9	 mov	 rdi, rcx
  0001c	8b c2		 mov	 eax, edx
  0001e	41 8b c9	 mov	 ecx, r9d
  00021	f3 ab		 rep stosd
  00023	4f 8d 14 8a	 lea	 r10, QWORD PTR [r10+r9*4]
$LN13@coreFillMe:

; 40   :     *((UINT32 *)start_addr) = val;
; 41   :     start_addr += 4;
; 42   :   }
; 43   : 
; 44   :   UINT8 *pattern = (UINT8 *)&val;
; 45   : 
; 46   :   for (i = 0; i < (len % 4); i++) {

  00027	41 83 e0 03	 and	 r8d, 3
  0002b	76 0d		 jbe	 SHORT $LN7@coreFillMe
  0002d	48 8d 54 24 38	 lea	 rdx, QWORD PTR val$[rsp]
  00032	49 8b ca	 mov	 rcx, r10
  00035	e8 00 00 00 00	 call	 memcpy
$LN7@coreFillMe:

; 47   :     *(start_addr + i) = *(pattern + i);
; 48   :   }
; 49   :   return;
; 50   : }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
coreFillMemory ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\memfill64.c
;	COMDAT fillMemory
_TEXT	SEGMENT
start_addr$ = 8
val$ = 16
len$ = 24
fillMemory PROC						; COMDAT

; 69   :   coreFillMemory(start_addr, val, len);

  00000	e9 00 00 00 00	 jmp	 coreFillMemory
fillMemory ENDP
_TEXT	ENDS
END
