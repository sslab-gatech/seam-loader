; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EDATA32	SEGMENT
hex	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
EDATA32	ENDS
PUBLIC	ComSerialOut
PUBLIC	printHex
EDATA32	SEGMENT
?buffer@?1??printHex@@9@9 DB 011H DUP (?)		; `printHex'::`2'::buffer
EDATA32	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\trace64\trace64.c
;	COMDAT printHex
_TEXT	SEGMENT
num$ = 8
printHex PROC						; COMDAT

; 38   : {

  00000	ba 0f 00 00 00	 mov	 edx, 15
  00005	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?buffer@?1??printHex@@9@9
$LL4@printHex:

; 39   :     int i = 0, k = 0;
; 40   :     static char buffer[17];    
; 41   :     for (i = 0; i<16; i++) {
; 42   :         buffer[15 - i] = hex[num & 0xF];

  0000c	48 8b c1	 mov	 rax, rcx
  0000f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:hex
  00016	83 e0 0f	 and	 eax, 15

; 43   :         num = num >> 4;

  00019	48 c1 e9 04	 shr	 rcx, 4
  0001d	42 8a 04 00	 mov	 al, BYTE PTR [rax+r8]
  00021	42 88 04 0a	 mov	 BYTE PTR [rdx+r9], al
  00025	48 ff ca	 dec	 rdx
  00028	48 83 fa ff	 cmp	 rdx, -1
  0002c	7f de		 jg	 SHORT $LL4@printHex

; 44   :     }
; 45   :     buffer[16] = 0;
; 46   : 
; 47   :     ComSerialOut(buffer);

  0002e	49 8b c9	 mov	 rcx, r9
  00031	c6 05 10 00 00
	00 00		 mov	 BYTE PTR ?buffer@?1??printHex@@9@9+16, 0
  00038	e9 00 00 00 00	 jmp	 ComSerialOut
printHex ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\trace64\trace64.c
;	COMDAT ComSerialOut
_TEXT	SEGMENT
str$ = 8
ComSerialOut PROC					; COMDAT

; 21   :     //static uint8_t initialized=0;
; 22   :     unsigned short     comPort = 0x3f8;
; 23   : 
; 24   :     while (*str) {

  00000	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00003	74 34		 je	 SHORT $LN3@ComSerialO
  00005	41 b9 fd 03 00
	00		 mov	 r9d, 1021		; 000003fdH
  0000b	45 8d 41 fb	 lea	 r8d, QWORD PTR [r9-5]
$LL4@ComSerialO:

; 25   :         while (0 == (_inp(comPort + 5) & 0x20));

  0000f	41 8b d1	 mov	 edx, r9d
  00012	ec		 in	 al, dx
  00013	a8 20		 test	 al, 32			; 00000020H
  00015	74 f8		 je	 SHORT $LL4@ComSerialO

; 26   :         if ((*str) == 0xa) {

  00017	80 39 0a	 cmp	 BYTE PTR [rcx], 10
  0001a	75 0e		 jne	 SHORT $LN7@ComSerialO

; 27   :             _outp(comPort, 0xd);

  0001c	41 8b d0	 mov	 edx, r8d
  0001f	b0 0d		 mov	 al, 13
  00021	ee		 out	 dx, al
$LL6@ComSerialO:

; 28   :             while (0 == (_inp(comPort + 5) & 0x20));

  00022	41 8b d1	 mov	 edx, r9d
  00025	ec		 in	 al, dx
  00026	a8 20		 test	 al, 32			; 00000020H
  00028	74 f8		 je	 SHORT $LL6@ComSerialO
$LN7@ComSerialO:

; 29   :         }
; 30   :         _outp(comPort, *str++);

  0002a	0f b6 01	 movzx	 eax, BYTE PTR [rcx]
  0002d	41 8b d0	 mov	 edx, r8d
  00030	48 ff c1	 inc	 rcx
  00033	ee		 out	 dx, al
  00034	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00037	75 d6		 jne	 SHORT $LL4@ComSerialO
$LN3@ComSerialO:

; 31   :     }
; 32   : }

  00039	c3		 ret	 0
ComSerialOut ENDP
_TEXT	ENDS
END
