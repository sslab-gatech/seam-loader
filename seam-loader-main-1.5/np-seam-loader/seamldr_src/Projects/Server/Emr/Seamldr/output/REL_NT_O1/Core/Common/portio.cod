; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

	TITLE	D:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\Core\Common\portio.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___InPort8
PUBLIC	___OutPort8
PUBLIC	___InPort16
PUBLIC	___OutPort16
PUBLIC	___InPort32
PUBLIC	___OutPort32
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\portio.c
;	COMDAT ___OutPort32
_TEXT	SEGMENT
_ioAddress$ = 8						; size = 2
_data$ = 12						; size = 4
___OutPort32 PROC					; COMDAT

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 149  :   _asm {
; 150  :     mov dx, ioAddress

  00003	66 8b 55 08	 mov	 dx, WORD PTR _ioAddress$[ebp]

; 151  :     mov eax, data

  00007	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]

; 152  :     out dx, eax

  0000a	ef		 out	 dx, eax

; 153  :   }
; 154  : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
___OutPort32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\portio.c
;	COMDAT ___InPort32
_TEXT	SEGMENT
_eaxReg$ = -4						; size = 4
_ioAddress$ = 8						; size = 2
___InPort32 PROC					; COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 82   :   UINT32 eaxReg;
; 83   : 
; 84   :   _asm {
; 85   :     mov dx, ioAddress

  00004	66 8b 55 08	 mov	 dx, WORD PTR _ioAddress$[ebp]

; 86   :     in eax, dx

  00008	ed		 in	 eax, dx

; 87   :     mov eaxReg, eax

  00009	89 45 fc	 mov	 DWORD PTR _eaxReg$[ebp], eax

; 88   :   }
; 89   : 
; 90   :   return eaxReg;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _eaxReg$[ebp]

; 91   : }

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
___InPort32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\portio.c
;	COMDAT ___OutPort16
_TEXT	SEGMENT
_ioAddress$ = 8						; size = 2
_data$ = 12						; size = 2
___OutPort16 PROC					; COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :   _asm {
; 129  :     mov dx, ioAddress

  00003	66 8b 55 08	 mov	 dx, WORD PTR _ioAddress$[ebp]

; 130  :     mov ax, data

  00007	66 8b 45 0c	 mov	 ax, WORD PTR _data$[ebp]

; 131  :     out dx, ax

  0000b	66 ef		 out	 dx, ax

; 132  :   }
; 133  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
___OutPort16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\portio.c
;	COMDAT ___InPort16
_TEXT	SEGMENT
_axReg$ = -4						; size = 2
_ioAddress$ = 8						; size = 2
___InPort16 PROC					; COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 57   :   UINT16 axReg;
; 58   : 
; 59   :   _asm {
; 60   :     mov dx, ioAddress

  00004	66 8b 55 08	 mov	 dx, WORD PTR _ioAddress$[ebp]

; 61   :     in ax, dx

  00008	66 ed		 in	 ax, dx

; 62   :     mov axReg, ax

  0000a	66 89 45 fc	 mov	 WORD PTR _axReg$[ebp], ax

; 63   :   }
; 64   : 
; 65   :   return axReg;

  0000e	66 8b 45 fc	 mov	 ax, WORD PTR _axReg$[ebp]

; 66   : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
___InPort16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\portio.c
;	COMDAT ___OutPort8
_TEXT	SEGMENT
_ioAddress$ = 8						; size = 2
_data$ = 12						; size = 1
___OutPort8 PROC					; COMDAT

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 107  :   _asm {
; 108  :     mov dx, ioAddress

  00003	66 8b 55 08	 mov	 dx, WORD PTR _ioAddress$[ebp]

; 109  :     mov al, data

  00007	8a 45 0c	 mov	 al, BYTE PTR _data$[ebp]

; 110  :     out dx, al

  0000a	ee		 out	 dx, al

; 111  :   }
; 112  : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
___OutPort8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\portio.c
;	COMDAT ___InPort8
_TEXT	SEGMENT
_alReg$ = -1						; size = 1
_ioAddress$ = 8						; size = 2
___InPort8 PROC						; COMDAT

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 33   :   UINT8 alReg;
; 34   : 
; 35   :   _asm {
; 36   :     mov dx, ioAddress

  00004	66 8b 55 08	 mov	 dx, WORD PTR _ioAddress$[ebp]

; 37   :     in al, dx

  00008	ec		 in	 al, dx

; 38   :     mov alReg, al

  00009	88 45 ff	 mov	 BYTE PTR _alReg$[ebp], al

; 39   :   }
; 40   : 
; 41   :   return alReg;

  0000c	8a 45 ff	 mov	 al, BYTE PTR _alReg$[ebp]

; 42   : }

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
___InPort8 ENDP
_TEXT	ENDS
END
