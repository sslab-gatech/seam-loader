; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

	TITLE	D:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\Core\Common\MemCpy.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_memcpy
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\memcpy.c
;	COMDAT _memcpy
_TEXT	SEGMENT
_to$ = 8						; size = 4
_from$ = 12						; size = 4
_len$ = 16						; size = 4
_memcpy	PROC						; COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 55 10	 mov	 edx, DWORD PTR _len$[ebp]
  00006	56		 push	 esi

; 25   :   char *d = to;

  00007	8b 75 08	 mov	 esi, DWORD PTR _to$[ebp]
  0000a	57		 push	 edi

; 26   :   char *s = (char *)from;

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR _from$[ebp]
  0000e	83 fa 04	 cmp	 edx, 4

; 27   : 
; 28   :   while (len / 4) {

  00011	72 17		 jb	 SHORT $LN8@memcpy

; 25   :   char *d = to;

  00013	8b ca		 mov	 ecx, edx
  00015	c1 e9 02	 shr	 ecx, 2
$LL2@memcpy:

; 29   :     *(UINT32 *) d = *(UINT32 *) s;

  00018	8b 07		 mov	 eax, DWORD PTR [edi]

; 30   :     d += 4;
; 31   :     s += 4;
; 32   :     len -= 4;

  0001a	83 ea 04	 sub	 edx, 4
  0001d	89 06		 mov	 DWORD PTR [esi], eax
  0001f	83 c7 04	 add	 edi, 4
  00022	83 c6 04	 add	 esi, 4
  00025	83 e9 01	 sub	 ecx, 1
  00028	75 ee		 jne	 SHORT $LL2@memcpy
$LN8@memcpy:

; 33   :   }
; 34   :   ;
; 35   :   while (len--) {

  0002a	85 d2		 test	 edx, edx
  0002c	74 0d		 je	 SHORT $LN10@memcpy
  0002e	2b fe		 sub	 edi, esi
$LL4@memcpy:

; 36   :     *d++ = *s++;

  00030	8a 0c 37	 mov	 cl, BYTE PTR [edi+esi]
  00033	88 0e		 mov	 BYTE PTR [esi], cl
  00035	46		 inc	 esi
  00036	83 ea 01	 sub	 edx, 1
  00039	75 f5		 jne	 SHORT $LL4@memcpy
$LN10@memcpy:

; 37   :   }
; 38   :   return to;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _to$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi

; 39   : }

  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
_memcpy	ENDP
_TEXT	ENDS
END
