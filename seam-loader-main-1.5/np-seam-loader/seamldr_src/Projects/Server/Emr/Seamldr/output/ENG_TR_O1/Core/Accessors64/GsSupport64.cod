; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__security_cookie
EDATA32	SEGMENT
__security_cookie DQ 00000000ff0a001bH
EDATA32	ENDS
PUBLIC	__report_rangecheckfailure
PUBLIC	__security_init_cookie
PUBLIC	__security_check_cookie
PUBLIC	__report_gsfailure
PUBLIC	__security_deadloop
PUBLIC	__security_cookie_rdrand
PUBLIC	__GSHandlerCheck
EXTRN	_ud2:PROC
EXTRN	RdSeed64:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$__report_rangecheckfailure DD imagerel $LN4
	DD	imagerel $LN4+12
	DD	imagerel $unwind$__report_rangecheckfailure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__security_init_cookie DD imagerel $LN7
	DD	imagerel $LN7+32
	DD	imagerel $unwind$__security_init_cookie
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__security_check_cookie DD imagerel $LN7
	DD	imagerel $LN7+24
	DD	imagerel $unwind$__security_check_cookie
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__report_gsfailure DD imagerel $LN4
	DD	imagerel $LN4+10
	DD	imagerel $unwind$__report_gsfailure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__security_deadloop DD imagerel $LN6
	DD	imagerel $LN6+11
	DD	imagerel $unwind$__security_deadloop
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__security_cookie_rdrand DD imagerel $LN16
	DD	imagerel $LN16+54
	DD	imagerel $unwind$__security_cookie_rdrand
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__GSHandlerCheck DD imagerel $LN4
	DD	imagerel $LN4+10
	DD	imagerel $unwind$__GSHandlerCheck
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__GSHandlerCheck DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__security_cookie_rdrand DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__security_deadloop DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__report_gsfailure DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__security_check_cookie DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__security_init_cookie DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__report_rangecheckfailure DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __GSHandlerCheck
_TEXT	SEGMENT
__GSHandlerCheck PROC					; COMDAT

; 91   : {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 92   :   __security_deadloop();  

  00004	e8 00 00 00 00	 call	 __security_deadloop
  00009	cc		 int	 3
$LN3@GSHandlerC:
__GSHandlerCheck ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __security_cookie_rdrand
_TEXT	SEGMENT
value$ = 48
__security_cookie_rdrand PROC				; COMDAT

; 36   : {

$LN16:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 37   :     UINT8 num_retries = 10; // number of max retries
; 38   :     UINT32 status = 0;
; 39   : 	UINT64 value = 0;

  00006	48 83 64 24 30
	00		 and	 QWORD PTR value$[rsp], 0
  0000c	b3 0a		 mov	 bl, 10
$LL2@security_c:

; 41   :         if (RdSeed64(&value)){

  0000e	48 8d 4c 24 30	 lea	 rcx, QWORD PTR value$[rsp]
  00013	e8 00 00 00 00	 call	 RdSeed64
  00018	85 c0		 test	 eax, eax
  0001a	75 09		 jne	 SHORT $LN5@security_c

; 42   :             status = 1;
; 43   :             break;
; 44   :         }
; 45   :         num_retries--;

  0001c	80 c3 ff	 add	 bl, 255			; 000000ffH

; 46   :         _mm_pause();

  0001f	f3 90		 pause

; 40   :     while(num_retries != 0){

  00021	75 eb		 jne	 SHORT $LL2@security_c
  00023	eb 0b		 jmp	 SHORT $LN14@security_c
$LN5@security_c:

; 50   :     return value;

  00025	48 8b 44 24 30	 mov	 rax, QWORD PTR value$[rsp]

; 51   : }

  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5b		 pop	 rbx
  0002f	c3		 ret	 0
$LN14@security_c:

; 47   :     }
; 48   :     if (status == 0)
; 49   :         __security_deadloop();

  00030	e8 00 00 00 00	 call	 __security_deadloop
  00035	cc		 int	 3
$LN13@security_c:
__security_cookie_rdrand ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __security_deadloop
_TEXT	SEGMENT
__security_deadloop PROC				; COMDAT

; 28   : {

$LN6:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
$DeadLoop$7:

; 29   : DeadLoop:
; 30   :   _ud2();

  00004	e8 00 00 00 00	 call	 _ud2

; 31   :   goto  DeadLoop;

  00009	eb f9		 jmp	 SHORT $DeadLoop$7
__security_deadloop ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __report_gsfailure
_TEXT	SEGMENT
_StackCookie$ = 48
__report_gsfailure PROC					; COMDAT

; 65   : {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 66   :   (void) _StackCookie;
; 67   :   __security_deadloop();

  00004	e8 00 00 00 00	 call	 __security_deadloop
  00009	cc		 int	 3
$LN3@report_gsf:
__report_gsfailure ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __security_check_cookie
_TEXT	SEGMENT
_StackCookie$ = 48
__security_check_cookie PROC				; COMDAT

; 71   : {

$LN7:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 72   :   if (_StackCookie == __security_cookie) {

  00004	48 3b 0d 00 00
	00 00		 cmp	 rcx, QWORD PTR __security_cookie
  0000b	75 05		 jne	 SHORT $LN5@security_c

; 77   : }

  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00011	c3		 ret	 0
$LN5@security_c:

; 73   :     return;
; 74   :   }
; 75   :   
; 76   :   __report_gsfailure(_StackCookie);    

  00012	e8 00 00 00 00	 call	 __report_gsfailure
  00017	cc		 int	 3
$LN4@security_c:
__security_check_cookie ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __security_init_cookie
_TEXT	SEGMENT
__security_init_cookie PROC				; COMDAT

; 55   : {

$LN7:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 56   :     UINTN Cookie;
; 57   :     Cookie = __security_cookie_rdrand();

  00004	e8 00 00 00 00	 call	 __security_cookie_rdrand

; 58   :     if (Cookie == 0){       

  00009	48 85 c0	 test	 rax, rax
  0000c	74 0c		 je	 SHORT $LN5@security_i

; 60   :     }
; 61   :   __security_cookie = Cookie;

  0000e	48 89 05 00 00
	00 00		 mov	 QWORD PTR __security_cookie, rax

; 62   : }

  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
$LN5@security_i:

; 59   :       __security_deadloop();

  0001a	e8 00 00 00 00	 call	 __security_deadloop
  0001f	cc		 int	 3
$LN4@security_i:
__security_init_cookie ENDP
_TEXT	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\accessors64\gssupport64.c
;	COMDAT __report_rangecheckfailure
_TEXT	SEGMENT
__report_rangecheckfailure PROC				; COMDAT

; 83   : {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 84   :   __report_gsfailure(0);

  00004	33 c9		 xor	 ecx, ecx
  00006	e8 00 00 00 00	 call	 __report_gsfailure
  0000b	cc		 int	 3
$LN3@report_ran:
__report_rangecheckfailure ENDP
_TEXT	ENDS
END
