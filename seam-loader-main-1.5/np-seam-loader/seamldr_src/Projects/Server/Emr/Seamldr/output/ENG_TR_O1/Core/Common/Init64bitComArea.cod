; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

	TITLE	D:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\Core\Common\Init64bitComArea.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_PSeamldrConstAsm
PUBLIC	_PSeamldrSizeAsm
PUBLIC	_PSeamldrAsm
EDATA32	SEGMENT
_PSeamldrConstAsm DB 030H DUP (?)
EDATA32	ENDS
EDATA32	SEGMENT
_PSeamldrSizeAsm DD 01a000H
	ORG $+4
_PSeamldrAsm DB	00H
	ORG $+106495
EDATA32	ENDS
PUBLIC	_Init64bitComArea
PUBLIC	??_C@_0BK@IOPEGNDA@OriginalIDTR?5Limit?3?50x?$CFx?6?$AA@IMHBAIGO@ ;  ?? ::IMHBAIGO::`string'
EXTRN	_fillMemory:PROC
EXTRN	_Trace:PROC
EXTRN	_OriginalIDTR:QWORD
EXTRN	_OriginalCR4:DWORD
EXTRN	_SeamldrCom64Data:BYTE
EXTRN	_OriginalECX:DWORD
EXTRN	_OriginalES:WORD
EXTRN	_OriginalFS:WORD
EXTRN	_OriginalGS:WORD
EXTRN	_OriginalSS:WORD
EXTRN	_HeaderStart:BYTE
;	COMDAT ??_C@_0BK@IOPEGNDA@OriginalIDTR?5Limit?3?50x?$CFx?6?$AA@IMHBAIGO@
EDATA32	SEGMENT
??_C@_0BK@IOPEGNDA@OriginalIDTR?5Limit?3?50x?$CFx?6?$AA@IMHBAIGO@ DB 'Ori'
	DB	'ginalIDTR Limit: 0x%x', 0aH, 00H		;  ?? ::IMHBAIGO::`string'
EDATA32	ENDS
; Function compile flags: /Ogsp
; File d:\work\np_seamldr\gnr\po\pr\public\firmware.security.tdx.np-seamldr\seamldr_src\core\common\init64bitcomarea.c
;	COMDAT _Init64bitComArea
_TEXT	SEGMENT
_Init64bitComArea PROC					; COMDAT

; 42   : {

  00000	56		 push	 esi

; 43   :   //
; 44   :   // Initialize 32-64 bit communication data
; 45   :   //
; 46   : 
; 47   :   fillMemory(SeamldrCom64Data.OriginalGdtr, 0, sizeof(SeamldrCom64Data.OriginalGdtr));

  00001	6a 0a		 push	 10			; 0000000aH
  00003	33 f6		 xor	 esi, esi
  00005	56		 push	 esi
  00006	68 4c 00 00 00	 push	 OFFSET _SeamldrCom64Data+76
  0000b	e8 00 00 00 00	 call	 _fillMemory

; 48   :   *(UINT16 *)SeamldrCom64Data.OriginalGdtr = (UINT16)(OriginalECX >> 16);

  00010	66 a1 02 00 00
	00		 mov	 ax, WORD PTR _OriginalECX+2

; 49   : 
; 50   :   SeamldrCom64Data.OriginalCR4 = OriginalCR4;
; 51   :   SeamldrCom64Data.HeaderStart = (UINT64)(UINTPTR)&HeaderStart;
; 52   :   SeamldrCom64Data.PseamldrOffset = (UINT64)(UINTPTR)&PSeamldrAsm;
; 53   :   SeamldrCom64Data.PseamldrSize = PSeamldrSizeAsm;
; 54   :   SeamldrCom64Data.PseamldrConstsOffset = (UINT64)(UINTPTR)&PSeamldrConstAsm;
; 55   :   SeamldrCom64Data.OriginalES = OriginalES & 0x0FF8;

  00016	b9 f8 0f 00 00	 mov	 ecx, 4088		; 00000ff8H
  0001b	66 a3 4c 00 00
	00		 mov	 WORD PTR _SeamldrCom64Data+76, ax
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR _OriginalCR4
  00026	a3 30 00 00 00	 mov	 DWORD PTR _SeamldrCom64Data+48, eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR _PSeamldrSizeAsm
  00030	a3 76 00 00 00	 mov	 DWORD PTR _SeamldrCom64Data+118, eax
  00035	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _OriginalES
  0003b	66 23 c1	 and	 ax, cx
  0003e	c7 05 6e 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SeamldrCom64Data+110, OFFSET _HeaderStart
  00048	66 a3 34 00 00
	00		 mov	 WORD PTR _SeamldrCom64Data+52, ax

; 56   :   SeamldrCom64Data.OriginalFS = OriginalFS & 0x0FF8;

  0004e	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _OriginalFS
  00054	66 23 c1	 and	 ax, cx
  00057	89 35 72 00 00
	00		 mov	 DWORD PTR _SeamldrCom64Data+114, esi
  0005d	66 a3 36 00 00
	00		 mov	 WORD PTR _SeamldrCom64Data+54, ax

; 57   :   SeamldrCom64Data.OriginalGS = OriginalGS & 0x0FF8;

  00063	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _OriginalGS
  00069	66 23 c1	 and	 ax, cx
  0006c	c7 05 7a 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SeamldrCom64Data+122, OFFSET _PSeamldrAsm
  00076	66 a3 38 00 00
	00		 mov	 WORD PTR _SeamldrCom64Data+56, ax

; 58   :   SeamldrCom64Data.OriginalSS = OriginalSS & 0x0FF8;

  0007c	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _OriginalSS
  00082	66 23 c1	 and	 ax, cx
  00085	89 35 7e 00 00
	00		 mov	 DWORD PTR _SeamldrCom64Data+126, esi
  0008b	66 a3 3a 00 00
	00		 mov	 WORD PTR _SeamldrCom64Data+58, ax

; 59   :   SeamldrCom64Data.OriginalECX = OriginalECX & 0x0FF8;

  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR _OriginalECX
  00096	23 c1		 and	 eax, ecx
  00098	c7 05 82 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SeamldrCom64Data+130, OFFSET _PSeamldrConstAsm
  000a2	a3 3c 00 00 00	 mov	 DWORD PTR _SeamldrCom64Data+60, eax

; 60   :   SeamldrCom64Data.OriginalIDTRLimit = (OriginalIDTR & MAX_WORD);

  000a7	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _OriginalIDTR
  000ad	66 a3 40 00 00
	00		 mov	 WORD PTR _SeamldrCom64Data+64, ax

; 61   :   TRACE("OriginalIDTR Limit: 0x%x\n", SeamldrCom64Data.OriginalIDTRLimit);

  000b3	0f b7 c0	 movzx	 eax, ax
  000b6	50		 push	 eax
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IOPEGNDA@OriginalIDTR?5Limit?3?50x?$CFx?6?$AA@IMHBAIGO@
  000bc	89 35 86 00 00
	00		 mov	 DWORD PTR _SeamldrCom64Data+134, esi
  000c2	e8 00 00 00 00	 call	 _Trace
  000c7	83 c4 14	 add	 esp, 20			; 00000014H
  000ca	5e		 pop	 esi

; 62   : }

  000cb	c3		 ret	 0
_Init64bitComArea ENDP
_TEXT	ENDS
END
